// (-- api-linter: core::0191::java-outer-classname=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-multiple-files=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-package=disabled
//     aip.dev/not-precedent: I don't care about java. --)

syntax = "proto3";

package api.users.user.v1alpha1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";

// the user service
service UserService {
  // get a user
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {get: "/users/v1alpha1/{name=users/*}"};
  }

  // list users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {get: "/users/v1alpha1/users"};
  }

  // update a user
  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.method_signature) = "user,update_mask";
    option (google.api.http) = {
      patch: "/users/v1alpha1/{user.name=users/*}"
      body: "user"
    };
  }
}

// the main user object
message User {
  option (google.api.resource) = {
    type: "api.meals.user.v1alpha1/User"
    pattern: "users/{user}"
    plural: "users"
    singular: "user"
  };

  // the name of the user
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // the public name of the user
  string public_name = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the email of the user
  string email = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // the username of the user
  string username = 4 [(google.api.field_behavior) = OPTIONAL];

  // the given name of the user
  string given_name = 5 [(google.api.field_behavior) = OPTIONAL];

  // the family name of the user
  string family_name = 6 [(google.api.field_behavior) = OPTIONAL];
}

// the request to get a user
message GetUserRequest {
  // the name of the user to get
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.meals.user.v1alpha1/User"
  ];
}

// the request to list users
message ListUsersRequest {
  // returned page
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the page token
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the filter
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// the response to list users
message ListUsersResponse {
  // the users
  repeated User users = 1;
  // the next page token
  string next_page_token = 2;
}

// the request to update a user
message UpdateUserRequest {
  // the user to update
  User user = 1 [(google.api.field_behavior) = REQUIRED];

  // the fields to update
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}
