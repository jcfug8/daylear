syntax = "proto3";

package api.users.user.v1alpha1;

import "api/types/accept_target.proto";
import "api/types/access_state.proto";
import "api/types/permission_level.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Bearer token for authentication"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
      value: {}
    }
  }
};

// The user recipient list service
service AccessKeyService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "Access Key management"
    external_docs: {
      url: "https://daylear.com/docs"
      description: "Daylear API Documentation"
    }
  };

  // Create an access to a user
  rpc CreateAccessKey(CreateAccessKeyRequest) returns (AccessKey) {
    option (google.api.method_signature) = "parent,access_key";
    option (google.api.http) = {
      post: "/users/v1alpha1/{parent=users/*}/accessKeys"
      body: "access_key"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Grant a user or user access to a user"
      description: "Grants a user or user a specific permission level to a user."
      tags: "AccessKeyService"
    };
  }

  // Delete an access to a user
  rpc DeleteAccessKey(DeleteAccessKeyRequest) returns (google.protobuf.Empty) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {delete: "/users/v1alpha1/{name=users/*/accessKeys/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a user access key"
      description: "Removes a user's or user's access key."
      tags: "AccessKeyService"
    };
  }

  // Get an access to a user
  rpc GetAccessKey(GetAccessKeyRequest) returns (AccessKey) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {get: "/users/v1alpha1/{name=users/*/accessKeys/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a user access key"
      description: "Retrieves details about a specific user access key."
      tags: "AccessKeyService"
    };
  }

  // List accesses to a user
  rpc ListAccessKeys(ListAccessKeysRequest) returns (ListAccessKeysResponse) {
    option (google.api.method_signature) = "parent";
    option (google.api.http) = {get: "/users/v1alpha1/{parent=users/*}/accessKeys"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List user access keys"
      description: "Lists all access keys a user has."
      tags: "AccessKeyService"
    };
  }

  // Update an access key
  rpc UpdateAccessKey(UpdateAccessKeyRequest) returns (AccessKey) {
    option (google.api.method_signature) = "access_key,update_mask";
    option (google.api.http) = {
      patch: "/users/v1alpha1/{access_key.name=users/*/accessKeys/*}"
      body: "access_key"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a user access key"
      description: "Updates a user's access key title and description."
      tags: "AccessKeyService"
    };
  }
}

// This represents the data about a user's access key
message AccessKey {
  option (google.api.resource) = {
    type: "api.users.user.v1alpha1/AccessKey"
    pattern: "users/{user}/accessKeys/{access_key}"
    plural: "accessKeys"
    singular: "accessKey"
  };

  // The name of the access key
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // The title of the access key
  string title = 2 [(google.api.field_behavior) = REQUIRED];

  // The description of the access key
  string description = 3 [(google.api.field_behavior) = OPTIONAL];

  // The access key
  string unencrypted_access_key = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The request to create an access key
message CreateAccessKeyRequest {
  // parent
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.users.user.v1alpha1/User"
  ];

  // The access key to create
  AccessKey access_key = 2 [(google.api.field_behavior) = REQUIRED];
}

// The request to delete an access key
message DeleteAccessKeyRequest {
  // name
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.users.user.v1alpha1/AccessKey"
  ];
}

// The request to get an access key
message GetAccessKeyRequest {
  // name
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.users.user.v1alpha1/AccessKey"
  ];
}

// The request to list access keys
message ListAccessKeysRequest {
  // parent
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.users.user.v1alpha1/User"
  ];

  // The filter to apply to the list
  string filter = 2 [(google.api.field_behavior) = OPTIONAL];

  // The page size to apply to the list
  int32 page_size = 3 [(google.api.field_behavior) = OPTIONAL];

  // The page token to apply to the list
  string page_token = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The response to list access keys
message ListAccessKeysResponse {
  // The list of access keys
  repeated AccessKey access_keys = 1;

  // The next page token
  string next_page_token = 2;
}

// The request to update an access key
message UpdateAccessKeyRequest {
  // access key
  AccessKey access_key = 1 [(google.api.field_behavior) = REQUIRED];

  // update mask
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}
