// (-- api-linter: core::0191::java-outer-classname=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-multiple-files=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-package=disabled
//     aip.dev/not-precedent: I don't care about java. --)

syntax = "proto3";

package api.users.user.v1alpha1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Bearer token for authentication"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
      value: {}
    }
  }
};

// the user service
service PublicUserService {
  // list a public user
  rpc ListPublicUsers(ListPublicUsersRequest) returns (ListPublicUsersResponse) {
    option (google.api.http) = {get: "/users/v1alpha1/publicUsers"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List public users"
      description: "Retrieves a paginated list of public users. Supports filtering and pagination."
      tags: "PublicUserService"
      parameters: {
        headers: {
          name: "X-Daylear-Circle"
          description: "the name of the circle to act as"
          type: STRING
        }
      }
    };
  }

  // get a public user
  rpc GetPublicUser(GetPublicUserRequest) returns (PublicUser) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {get: "/users/v1alpha1/{name=publicUsers/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a public user"
      description: "Retrieves a single public user by resource name."
      tags: "PublicUserService"
      parameters: {
        headers: {
          name: "X-Daylear-Circle"
          description: "the name of the circle to act as"
          type: STRING
        }
      }
    };
  }
}

// the main public user object
message PublicUser {
  option (google.api.resource) = {
    type: "api.users.user.v1alpha1/PublicUser"
    pattern: "publicUsers/{public_user}"
    plural: "publicUsers"
    singular: "publicUser"
  };

  // the name of the user
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // username
  string username = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the given name of the user
  string given_name = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the family name of the user
  string family_name = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// the request to list public users
message ListPublicUsersRequest {
  // returned page
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the page token
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the filter
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// the response to list users
message ListPublicUsersResponse {
  // the users
  repeated PublicUser public_users = 1;
  // the next page token
  string next_page_token = 2;
}

// the request to get a public user
message GetPublicUserRequest {
  // the name of the public user to get
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.users.user.v1alpha1/PublicUser"
  ];
}
