syntax = "proto3";

package api.lists.list.v1alpha1;

import "api/types/accept_target.proto";
import "api/types/access_state.proto";
import "api/types/permission_level.proto";
import "api/types/visibility_level.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Bearer token for authentication"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
      value: {}
    }
  }
};

// the list service
service ListService {
  // create a list
  rpc CreateList(CreateListRequest) returns (List) {
    option (google.api.method_signature) = "parent,list,list_id";
    option (google.api.http) = {
      post: "/lists/v1alpha1/lists"
      body: "list"
      additional_bindings: {
        post: "/lists/v1alpha1/{parent=circles/*}/lists"
        body: "list"
      }
      additional_bindings: {
        post: "/lists/v1alpha1/{parent=users/*}/lists"
        body: "list"
      }
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a list"
      description: "Creates a new list with the provided details."
      tags: "ListService"
    };
  }

  // list lists
  rpc ListLists(ListListsRequest) returns (ListListsResponse) {
    option (google.api.method_signature) = "parent";
    option (google.api.http) = {
      get: "/lists/v1alpha1/lists"
      additional_bindings: {get: "/lists/v1alpha1/{parent=circles/*}/lists"}
      additional_bindings: {get: "/lists/v1alpha1/{parent=users/*}/lists"}
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List lists"
      description: "Retrieves a paginated list of lists. Supports filtering and pagination."
      tags: "ListService"
    };
  }

  // update a list
  rpc UpdateList(UpdateListRequest) returns (List) {
    option (google.api.method_signature) = "list,update_mask";
    option (google.api.http) = {
      patch: "/lists/v1alpha1/{list.name=lists/*}"
      body: "list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a list"
      description: "Updates the details of an existing list."
      tags: "ListService"
    };
  }

  // delete` a list
  rpc DeleteList(DeleteListRequest) returns (List) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {delete: "/lists/v1alpha1/{name=lists/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a list"
      description: "Deletes a list by resource name."
      tags: "ListService"
    };
  }

  // get a list
  rpc GetList(GetListRequest) returns (List) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {get: "/lists/v1alpha1/{name=lists/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a list"
      description: "Retrieves a single list by resource name."
      tags: "ListService"
    };
  }

  // favorite a list
  rpc FavoriteList(FavoriteListRequest) returns (FavoriteListResponse) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      post: "/meals/v1alpha1/{name=lists/*}:favorite"
      body: "*"
      additional_bindings: {
        post: "/meals/v1alpha1/{name=circles/*/lists/*}:favorite"
        body: "*"
      }
      additional_bindings: {
        post: "/meals/v1alpha1/{name=users/*/lists/*}:favorite"
        body: "*"
      }
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Favorite a list"
      description: "Favorites a list by resource name."
      tags: "ListService"
    };
  }

  // unfavorite a list
  rpc UnfavoriteList(UnfavoriteListRequest) returns (UnfavoriteListResponse) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {
      post: "/meals/v1alpha1/{name=lists/*}:unfavorite"
      body: "*"
      additional_bindings: {
        post: "/meals/v1alpha1/{name=circles/*/lists/*}:unfavorite"
        body: "*"
      }
      additional_bindings: {
        post: "/meals/v1alpha1/{name=users/*/lists/*}:unfavorite"
        body: "*"
      }
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Unfavorite a list"
      description: "Unfavorites a list by resource name."
      tags: "ListService"
    };
  }
}

// the main list object
message List {
  option (google.api.resource) = {
    type: "api.lists.list.v1alpha1/List"
    pattern: "lists/{list}"
    pattern: "circles/{circle}/lists/{list}"
    pattern: "users/{user}/lists/{list}"
    plural: "lists"
    singular: "list"
  };

  // the name of the list
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // the title of the list
  string title = 2 [(google.api.field_behavior) = REQUIRED];

  // the description of the list
  string description = 3 [(google.api.field_behavior) = OPTIONAL];

  // show completed
  bool show_completed = 4 [(google.api.field_behavior) = OPTIONAL];

  // the visibility of the list
  api.types.VisibilityLevel visibility = 5 [(google.api.field_behavior) = REQUIRED];

  // the access details for the current user/circle
  ListAccess list_access = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the time the list was created (UTC)
  google.protobuf.Timestamp create_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the time the list was last updated (UTC)
  google.protobuf.Timestamp update_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

  // favorited
  bool favorited = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the sections of the list
  repeated ListSection sections = 10 [(google.api.field_behavior) = OUTPUT_ONLY];

  // the details for a list section
  message ListSection {
    // the name of the list section
    string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    // the name of the list section
    string title = 2 [(google.api.field_behavior) = REQUIRED];
  }

  // the list access details
  message ListAccess {
    // the name of the list access
    string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

    // the permission of the list
    api.types.PermissionLevel permission_level = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

    // the access state of the user to the list
    api.types.AccessState state = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

    // the accept target of the list
    api.types.AcceptTarget accept_target = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  }
}

// the request to create a list
message CreateListRequest {
  // the list to create
  List list = 1 [(google.api.field_behavior) = REQUIRED];

  // the id of the list
  string list_id = 2 [(google.api.field_behavior) = REQUIRED];

  // the parent of the list
  string parent = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference).child_type = "api.lists.list.v1alpha1/List"
  ];
}

// the request to list lists
message ListListsRequest {
  // returned page
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the page token
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // used to specify the filter
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
  // the parent of the lists
  string parent = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference).child_type = "api.lists.list.v1alpha1/List"
  ];
}

// the response to list lists
message ListListsResponse {
  // the lists
  repeated List lists = 1;
  // the next page token
  string next_page_token = 2;
}

// the request to update a list
message UpdateListRequest {
  // the list to update
  List list = 1 [(google.api.field_behavior) = REQUIRED];

  // the fields to update
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// the request to delete a list
message DeleteListRequest {
  // the name of the list to delete
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.lists.list.v1alpha1/List"
  ];
}

// the request to get a list
message GetListRequest {
  // the name of the list to get
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.lists.list.v1alpha1/List"
  ];
}

// the request to favorite a list
message FavoriteListRequest {
  // the name of the list to favorite
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.lists.list.v1alpha1/List"
  ];
}

// the response to favorite a list
message FavoriteListResponse {}

// the request to unfavorite a list
message UnfavoriteListRequest {
  // the name of the list to unfavorite
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.lists.list.v1alpha1/List"
  ];
}

// the response to unfavorite a list
message UnfavoriteListResponse {}
