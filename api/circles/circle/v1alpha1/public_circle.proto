// (-- api-linter: core::0191::java-outer-classname=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-multiple-files=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-package=disabled
//     aip.dev/not-precedent: I don't care about java. --)

syntax = "proto3";

package api.circles.circle.v1alpha1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Bearer token for authentication"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
      value: {}
    }
  }
};

// the public circle service
service PublicCircleService {
  // list public circles
  rpc ListPublicCircles(ListPublicCirclesRequest) returns (ListPublicCirclesResponse) {
    option (google.api.http) = {get: "/circles/v1alpha1/publicCircles"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List public circles"
      description: "Retrieves a paginated list of public circles. Supports filtering and pagination."
      tags: "PublicCircleService"
      parameters: {
        headers: {
          name: "X-Daylear-Circle"
          description: "the name of the circle to act as"
          type: STRING
        }
      }
    };
  }

  // get a public circle
  rpc GetPublicCircle(GetPublicCircleRequest) returns (PublicCircle) {
    option (google.api.method_signature) = "name";
    option (google.api.http) = {get: "/circles/v1alpha1/{name=publicCircles/*}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a public circle"
      description: "Retrieves a single public circle by resource name."
      tags: "PublicCircleService"
      parameters: {
        headers: {
          name: "X-Daylear-Circle"
          description: "the name of the circle to act as"
          type: STRING
        }
      }
    };
  }
}

// the main public circle object
message PublicCircle {
  option (google.api.resource) = {
    type: "api.circles.circle.v1alpha1/PublicCircle"
    pattern: "publicCircles/{public_circle}"
    plural: "publicCircles"
    singular: "publicCircle"
  };

  // the name of the circle
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // the title of the circle
  string title = 2 [(google.api.field_behavior) = REQUIRED];
}

// the request to list circles
message ListPublicCirclesRequest {
  // the page size
  int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // the page token
  string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // used to specify the filter
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// the response to list circles
message ListPublicCirclesResponse {
  // the circles
  repeated PublicCircle public_circles = 1;

  // the next page token
  string next_page_token = 2;
}

// the request to get a circle
message GetPublicCircleRequest {
  // the name of the circle
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.circles.circle.v1alpha1/Circle"
  ];
}
