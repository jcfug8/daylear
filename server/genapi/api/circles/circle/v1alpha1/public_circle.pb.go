// (-- api-linter: core::0191::java-outer-classname=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-multiple-files=disabled
//     aip.dev/not-precedent: I don't care about java. --)
// (-- api-linter: core::0191::java-package=disabled
//     aip.dev/not-precedent: I don't care about java. --)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/circles/circle/v1alpha1/public_circle.proto

package circlev1alpha1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// the main public circle object
type PublicCircle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the circle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the title of the circle
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicCircle) Reset() {
	*x = PublicCircle{}
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicCircle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicCircle) ProtoMessage() {}

func (x *PublicCircle) ProtoReflect() protoreflect.Message {
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicCircle.ProtoReflect.Descriptor instead.
func (*PublicCircle) Descriptor() ([]byte, []int) {
	return file_api_circles_circle_v1alpha1_public_circle_proto_rawDescGZIP(), []int{0}
}

func (x *PublicCircle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicCircle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// the request to list circles
type ListPublicCirclesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the page size
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// the page token
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// used to specify the filter
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublicCirclesRequest) Reset() {
	*x = ListPublicCirclesRequest{}
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicCirclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicCirclesRequest) ProtoMessage() {}

func (x *ListPublicCirclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicCirclesRequest.ProtoReflect.Descriptor instead.
func (*ListPublicCirclesRequest) Descriptor() ([]byte, []int) {
	return file_api_circles_circle_v1alpha1_public_circle_proto_rawDescGZIP(), []int{1}
}

func (x *ListPublicCirclesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPublicCirclesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPublicCirclesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// the response to list circles
type ListPublicCirclesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the circles
	PublicCircles []*PublicCircle `protobuf:"bytes,1,rep,name=public_circles,json=publicCircles,proto3" json:"public_circles,omitempty"`
	// the next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPublicCirclesResponse) Reset() {
	*x = ListPublicCirclesResponse{}
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPublicCirclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicCirclesResponse) ProtoMessage() {}

func (x *ListPublicCirclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicCirclesResponse.ProtoReflect.Descriptor instead.
func (*ListPublicCirclesResponse) Descriptor() ([]byte, []int) {
	return file_api_circles_circle_v1alpha1_public_circle_proto_rawDescGZIP(), []int{2}
}

func (x *ListPublicCirclesResponse) GetPublicCircles() []*PublicCircle {
	if x != nil {
		return x.PublicCircles
	}
	return nil
}

func (x *ListPublicCirclesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// the request to get a circle
type GetPublicCircleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the circle
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicCircleRequest) Reset() {
	*x = GetPublicCircleRequest{}
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicCircleRequest) ProtoMessage() {}

func (x *GetPublicCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicCircleRequest.ProtoReflect.Descriptor instead.
func (*GetPublicCircleRequest) Descriptor() ([]byte, []int) {
	return file_api_circles_circle_v1alpha1_public_circle_proto_rawDescGZIP(), []int{3}
}

func (x *GetPublicCircleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_circles_circle_v1alpha1_public_circle_proto protoreflect.FileDescriptor

const file_api_circles_circle_v1alpha1_public_circle_proto_rawDesc = "" +
	"\n" +
	"/api/circles/circle/v1alpha1/public_circle.proto\x12\x1bapi.circles.circle.v1alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a google/protobuf/field_mask.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xad\x01\n" +
	"\fPublicCircle\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\bR\x04name\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tB\x03\xe0A\x02R\x05title:i\xeaAf\n" +
	"(api.circles.circle.v1alpha1/PublicCircle\x12\x1dpublicCircles/{public_circle}*\rpublicCircles2\fpublicCircle\"}\n" +
	"\x18ListPublicCirclesRequest\x12 \n" +
	"\tpage_size\x18\x01 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\x03\xe0A\x01R\tpageToken\x12\x1b\n" +
	"\x06filter\x18\x03 \x01(\tB\x03\xe0A\x01R\x06filter\"\x95\x01\n" +
	"\x19ListPublicCirclesResponse\x12P\n" +
	"\x0epublic_circles\x18\x01 \x03(\v2).api.circles.circle.v1alpha1.PublicCircleR\rpublicCircles\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"X\n" +
	"\x16GetPublicCircleRequest\x12>\n" +
	"\x04name\x18\x01 \x01(\tB*\xe0A\x02\xfaA$\n" +
	"\"api.circles.circle.v1alpha1/CircleR\x04name2\xc8\x05\n" +
	"\x13PublicCircleService\x12\xe6\x02\n" +
	"\x11ListPublicCircles\x125.api.circles.circle.v1alpha1.ListPublicCirclesRequest\x1a6.api.circles.circle.v1alpha1.ListPublicCirclesResponse\"\xe1\x01\x92A\xb6\x01\n" +
	"\x13PublicCircleService\x12\x13List public circles\x1aPRetrieves a paginated list of public circles. Supports filtering and pagination.r8\n" +
	"6\n" +
	"\x10X-Daylear-Circle\x12 the name of the circle to act as\x18\x01\x82\xd3\xe4\x93\x02!\x12\x1f/circles/v1alpha1/publicCircles\x12\xc7\x02\n" +
	"\x0fGetPublicCircle\x123.api.circles.circle.v1alpha1.GetPublicCircleRequest\x1a).api.circles.circle.v1alpha1.PublicCircle\"\xd3\x01\x92A\x98\x01\n" +
	"\x13PublicCircleService\x12\x13Get a public circle\x1a2Retrieves a single public circle by resource name.r8\n" +
	"6\n" +
	"\x10X-Daylear-Circle\x12 the name of the circle to act as\x18\x01\xdaA\x04name\x82\xd3\xe4\x93\x02*\x12(/circles/v1alpha1/{name=publicCircles/*}B\xf2\x02\x92AXZD\n" +
	"B\n" +
	"\n" +
	"BearerAuth\x124\b\x02\x12\x1fBearer token for authentication\x1a\rAuthorization \x02b\x10\n" +
	"\x0e\n" +
	"\n" +
	"BearerAuth\x12\x00\n" +
	"\x1fcom.api.circles.circle.v1alpha1B\x11PublicCircleProtoP\x01ZRgithub.com/jcfug8/daylear/server/genapi/api/circles/circle/v1alpha1;circlev1alpha1\xa2\x02\x03ACC\xaa\x02\x1bApi.Circles.Circle.V1alpha1\xca\x02\x1bApi\\Circles\\Circle\\V1alpha1\xe2\x02'Api\\Circles\\Circle\\V1alpha1\\GPBMetadata\xea\x02\x1eApi::Circles::Circle::V1alpha1b\x06proto3"

var (
	file_api_circles_circle_v1alpha1_public_circle_proto_rawDescOnce sync.Once
	file_api_circles_circle_v1alpha1_public_circle_proto_rawDescData []byte
)

func file_api_circles_circle_v1alpha1_public_circle_proto_rawDescGZIP() []byte {
	file_api_circles_circle_v1alpha1_public_circle_proto_rawDescOnce.Do(func() {
		file_api_circles_circle_v1alpha1_public_circle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_circles_circle_v1alpha1_public_circle_proto_rawDesc), len(file_api_circles_circle_v1alpha1_public_circle_proto_rawDesc)))
	})
	return file_api_circles_circle_v1alpha1_public_circle_proto_rawDescData
}

var file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_circles_circle_v1alpha1_public_circle_proto_goTypes = []any{
	(*PublicCircle)(nil),              // 0: api.circles.circle.v1alpha1.PublicCircle
	(*ListPublicCirclesRequest)(nil),  // 1: api.circles.circle.v1alpha1.ListPublicCirclesRequest
	(*ListPublicCirclesResponse)(nil), // 2: api.circles.circle.v1alpha1.ListPublicCirclesResponse
	(*GetPublicCircleRequest)(nil),    // 3: api.circles.circle.v1alpha1.GetPublicCircleRequest
}
var file_api_circles_circle_v1alpha1_public_circle_proto_depIdxs = []int32{
	0, // 0: api.circles.circle.v1alpha1.ListPublicCirclesResponse.public_circles:type_name -> api.circles.circle.v1alpha1.PublicCircle
	1, // 1: api.circles.circle.v1alpha1.PublicCircleService.ListPublicCircles:input_type -> api.circles.circle.v1alpha1.ListPublicCirclesRequest
	3, // 2: api.circles.circle.v1alpha1.PublicCircleService.GetPublicCircle:input_type -> api.circles.circle.v1alpha1.GetPublicCircleRequest
	2, // 3: api.circles.circle.v1alpha1.PublicCircleService.ListPublicCircles:output_type -> api.circles.circle.v1alpha1.ListPublicCirclesResponse
	0, // 4: api.circles.circle.v1alpha1.PublicCircleService.GetPublicCircle:output_type -> api.circles.circle.v1alpha1.PublicCircle
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_circles_circle_v1alpha1_public_circle_proto_init() }
func file_api_circles_circle_v1alpha1_public_circle_proto_init() {
	if File_api_circles_circle_v1alpha1_public_circle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_circles_circle_v1alpha1_public_circle_proto_rawDesc), len(file_api_circles_circle_v1alpha1_public_circle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_circles_circle_v1alpha1_public_circle_proto_goTypes,
		DependencyIndexes: file_api_circles_circle_v1alpha1_public_circle_proto_depIdxs,
		MessageInfos:      file_api_circles_circle_v1alpha1_public_circle_proto_msgTypes,
	}.Build()
	File_api_circles_circle_v1alpha1_public_circle_proto = out.File
	file_api_circles_circle_v1alpha1_public_circle_proto_goTypes = nil
	file_api_circles_circle_v1alpha1_public_circle_proto_depIdxs = nil
}
