// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: api/lists/list/v1alpha1/list_item_completion.proto

package listv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ListItemCompletionService_CreateListItemCompletion_FullMethodName = "/api.lists.list.v1alpha1.ListItemCompletionService/CreateListItemCompletion"
	ListItemCompletionService_ListListItemCompletions_FullMethodName  = "/api.lists.list.v1alpha1.ListItemCompletionService/ListListItemCompletions"
	ListItemCompletionService_UpdateListItemCompletion_FullMethodName = "/api.lists.list.v1alpha1.ListItemCompletionService/UpdateListItemCompletion"
	ListItemCompletionService_DeleteListItemCompletion_FullMethodName = "/api.lists.list.v1alpha1.ListItemCompletionService/DeleteListItemCompletion"
	ListItemCompletionService_GetListItemCompletion_FullMethodName    = "/api.lists.list.v1alpha1.ListItemCompletionService/GetListItemCompletion"
)

// ListItemCompletionServiceClient is the client API for ListItemCompletionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// the listItemCompletion service
type ListItemCompletionServiceClient interface {
	// create a listItemCompletion
	CreateListItemCompletion(ctx context.Context, in *CreateListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error)
	// listItemCompletion listItemCompletions
	ListListItemCompletions(ctx context.Context, in *ListListItemCompletionsRequest, opts ...grpc.CallOption) (*ListListItemCompletionsResponse, error)
	// update a listItemCompletion
	UpdateListItemCompletion(ctx context.Context, in *UpdateListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error)
	// delete` a listItemCompletion
	DeleteListItemCompletion(ctx context.Context, in *DeleteListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error)
	// get a listItemCompletion
	GetListItemCompletion(ctx context.Context, in *GetListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error)
}

type listItemCompletionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewListItemCompletionServiceClient(cc grpc.ClientConnInterface) ListItemCompletionServiceClient {
	return &listItemCompletionServiceClient{cc}
}

func (c *listItemCompletionServiceClient) CreateListItemCompletion(ctx context.Context, in *CreateListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListItemCompletion)
	err := c.cc.Invoke(ctx, ListItemCompletionService_CreateListItemCompletion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listItemCompletionServiceClient) ListListItemCompletions(ctx context.Context, in *ListListItemCompletionsRequest, opts ...grpc.CallOption) (*ListListItemCompletionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListListItemCompletionsResponse)
	err := c.cc.Invoke(ctx, ListItemCompletionService_ListListItemCompletions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listItemCompletionServiceClient) UpdateListItemCompletion(ctx context.Context, in *UpdateListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListItemCompletion)
	err := c.cc.Invoke(ctx, ListItemCompletionService_UpdateListItemCompletion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listItemCompletionServiceClient) DeleteListItemCompletion(ctx context.Context, in *DeleteListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListItemCompletion)
	err := c.cc.Invoke(ctx, ListItemCompletionService_DeleteListItemCompletion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listItemCompletionServiceClient) GetListItemCompletion(ctx context.Context, in *GetListItemCompletionRequest, opts ...grpc.CallOption) (*ListItemCompletion, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListItemCompletion)
	err := c.cc.Invoke(ctx, ListItemCompletionService_GetListItemCompletion_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListItemCompletionServiceServer is the server API for ListItemCompletionService service.
// All implementations must embed UnimplementedListItemCompletionServiceServer
// for forward compatibility.
//
// the listItemCompletion service
type ListItemCompletionServiceServer interface {
	// create a listItemCompletion
	CreateListItemCompletion(context.Context, *CreateListItemCompletionRequest) (*ListItemCompletion, error)
	// listItemCompletion listItemCompletions
	ListListItemCompletions(context.Context, *ListListItemCompletionsRequest) (*ListListItemCompletionsResponse, error)
	// update a listItemCompletion
	UpdateListItemCompletion(context.Context, *UpdateListItemCompletionRequest) (*ListItemCompletion, error)
	// delete` a listItemCompletion
	DeleteListItemCompletion(context.Context, *DeleteListItemCompletionRequest) (*ListItemCompletion, error)
	// get a listItemCompletion
	GetListItemCompletion(context.Context, *GetListItemCompletionRequest) (*ListItemCompletion, error)
	mustEmbedUnimplementedListItemCompletionServiceServer()
}

// UnimplementedListItemCompletionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedListItemCompletionServiceServer struct{}

func (UnimplementedListItemCompletionServiceServer) CreateListItemCompletion(context.Context, *CreateListItemCompletionRequest) (*ListItemCompletion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateListItemCompletion not implemented")
}
func (UnimplementedListItemCompletionServiceServer) ListListItemCompletions(context.Context, *ListListItemCompletionsRequest) (*ListListItemCompletionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListListItemCompletions not implemented")
}
func (UnimplementedListItemCompletionServiceServer) UpdateListItemCompletion(context.Context, *UpdateListItemCompletionRequest) (*ListItemCompletion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateListItemCompletion not implemented")
}
func (UnimplementedListItemCompletionServiceServer) DeleteListItemCompletion(context.Context, *DeleteListItemCompletionRequest) (*ListItemCompletion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteListItemCompletion not implemented")
}
func (UnimplementedListItemCompletionServiceServer) GetListItemCompletion(context.Context, *GetListItemCompletionRequest) (*ListItemCompletion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListItemCompletion not implemented")
}
func (UnimplementedListItemCompletionServiceServer) mustEmbedUnimplementedListItemCompletionServiceServer() {
}
func (UnimplementedListItemCompletionServiceServer) testEmbeddedByValue() {}

// UnsafeListItemCompletionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ListItemCompletionServiceServer will
// result in compilation errors.
type UnsafeListItemCompletionServiceServer interface {
	mustEmbedUnimplementedListItemCompletionServiceServer()
}

func RegisterListItemCompletionServiceServer(s grpc.ServiceRegistrar, srv ListItemCompletionServiceServer) {
	// If the following call pancis, it indicates UnimplementedListItemCompletionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ListItemCompletionService_ServiceDesc, srv)
}

func _ListItemCompletionService_CreateListItemCompletion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateListItemCompletionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListItemCompletionServiceServer).CreateListItemCompletion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListItemCompletionService_CreateListItemCompletion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListItemCompletionServiceServer).CreateListItemCompletion(ctx, req.(*CreateListItemCompletionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListItemCompletionService_ListListItemCompletions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListListItemCompletionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListItemCompletionServiceServer).ListListItemCompletions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListItemCompletionService_ListListItemCompletions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListItemCompletionServiceServer).ListListItemCompletions(ctx, req.(*ListListItemCompletionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListItemCompletionService_UpdateListItemCompletion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateListItemCompletionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListItemCompletionServiceServer).UpdateListItemCompletion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListItemCompletionService_UpdateListItemCompletion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListItemCompletionServiceServer).UpdateListItemCompletion(ctx, req.(*UpdateListItemCompletionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListItemCompletionService_DeleteListItemCompletion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteListItemCompletionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListItemCompletionServiceServer).DeleteListItemCompletion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListItemCompletionService_DeleteListItemCompletion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListItemCompletionServiceServer).DeleteListItemCompletion(ctx, req.(*DeleteListItemCompletionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListItemCompletionService_GetListItemCompletion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListItemCompletionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListItemCompletionServiceServer).GetListItemCompletion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListItemCompletionService_GetListItemCompletion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListItemCompletionServiceServer).GetListItemCompletion(ctx, req.(*GetListItemCompletionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ListItemCompletionService_ServiceDesc is the grpc.ServiceDesc for ListItemCompletionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ListItemCompletionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.lists.list.v1alpha1.ListItemCompletionService",
	HandlerType: (*ListItemCompletionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateListItemCompletion",
			Handler:    _ListItemCompletionService_CreateListItemCompletion_Handler,
		},
		{
			MethodName: "ListListItemCompletions",
			Handler:    _ListItemCompletionService_ListListItemCompletions_Handler,
		},
		{
			MethodName: "UpdateListItemCompletion",
			Handler:    _ListItemCompletionService_UpdateListItemCompletion_Handler,
		},
		{
			MethodName: "DeleteListItemCompletion",
			Handler:    _ListItemCompletionService_DeleteListItemCompletion_Handler,
		},
		{
			MethodName: "GetListItemCompletion",
			Handler:    _ListItemCompletionService_GetListItemCompletion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/lists/list/v1alpha1/list_item_completion.proto",
}
