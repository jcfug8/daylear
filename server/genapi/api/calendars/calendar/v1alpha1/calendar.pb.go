// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/calendars/calendar/v1alpha1/calendar.proto

package calendarv1alpha1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	types "github.com/jcfug8/daylear/server/genapi/api/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// the main user calendar
type Calendar struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the title of the calendar
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// the description of the calendar
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// the visibility of the calendar
	Visibility types.VisibilityLevel `protobuf:"varint,4,opt,name=visibility,proto3,enum=api.types.VisibilityLevel" json:"visibility,omitempty"`
	// calendar access data
	CalendarAccess *Calendar_CalendarAccess `protobuf:"bytes,5,opt,name=calendar_access,json=calendarAccess,proto3" json:"calendar_access,omitempty"`
	// whether the current user has favorited this calendar
	Favorited     bool `protobuf:"varint,6,opt,name=favorited,proto3" json:"favorited,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Calendar) Reset() {
	*x = Calendar{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Calendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar) ProtoMessage() {}

func (x *Calendar) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar.ProtoReflect.Descriptor instead.
func (*Calendar) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *Calendar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Calendar) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Calendar) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Calendar) GetVisibility() types.VisibilityLevel {
	if x != nil {
		return x.Visibility
	}
	return types.VisibilityLevel(0)
}

func (x *Calendar) GetCalendarAccess() *Calendar_CalendarAccess {
	if x != nil {
		return x.CalendarAccess
	}
	return nil
}

func (x *Calendar) GetFavorited() bool {
	if x != nil {
		return x.Favorited
	}
	return false
}

// the request to create a calendar
type CreateCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the parent of the calendar
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// the calendar to create
	Calendar      *Calendar `protobuf:"bytes,2,opt,name=calendar,proto3" json:"calendar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCalendarRequest) Reset() {
	*x = CreateCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCalendarRequest) ProtoMessage() {}

func (x *CreateCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCalendarRequest.ProtoReflect.Descriptor instead.
func (*CreateCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCalendarRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateCalendarRequest) GetCalendar() *Calendar {
	if x != nil {
		return x.Calendar
	}
	return nil
}

// the request to list calendars
type ListCalendarsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the parent of the calendars
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// the page size
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// the page token
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// used to specify the filter
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCalendarsRequest) Reset() {
	*x = ListCalendarsRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCalendarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCalendarsRequest) ProtoMessage() {}

func (x *ListCalendarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCalendarsRequest.ProtoReflect.Descriptor instead.
func (*ListCalendarsRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{2}
}

func (x *ListCalendarsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListCalendarsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCalendarsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCalendarsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// the response to list calendars
type ListCalendarsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the calendars
	Calendars []*Calendar `protobuf:"bytes,1,rep,name=calendars,proto3" json:"calendars,omitempty"`
	// the next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCalendarsResponse) Reset() {
	*x = ListCalendarsResponse{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCalendarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCalendarsResponse) ProtoMessage() {}

func (x *ListCalendarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCalendarsResponse.ProtoReflect.Descriptor instead.
func (*ListCalendarsResponse) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{3}
}

func (x *ListCalendarsResponse) GetCalendars() []*Calendar {
	if x != nil {
		return x.Calendars
	}
	return nil
}

func (x *ListCalendarsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// the request to update a calendar
type UpdateCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the calendar to update
	Calendar *Calendar `protobuf:"bytes,1,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// the fields to update
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCalendarRequest) Reset() {
	*x = UpdateCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCalendarRequest) ProtoMessage() {}

func (x *UpdateCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCalendarRequest.ProtoReflect.Descriptor instead.
func (*UpdateCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCalendarRequest) GetCalendar() *Calendar {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *UpdateCalendarRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// the request to delete a calendar
type DeleteCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCalendarRequest) Reset() {
	*x = DeleteCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCalendarRequest) ProtoMessage() {}

func (x *DeleteCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCalendarRequest.ProtoReflect.Descriptor instead.
func (*DeleteCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCalendarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// the request to get a calendar
type GetCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarRequest) Reset() {
	*x = GetCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarRequest) ProtoMessage() {}

func (x *GetCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarRequest.ProtoReflect.Descriptor instead.
func (*GetCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{6}
}

func (x *GetCalendarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// the request to favorite a calendar
type FavoriteCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar to favorite
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteCalendarRequest) Reset() {
	*x = FavoriteCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCalendarRequest) ProtoMessage() {}

func (x *FavoriteCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCalendarRequest.ProtoReflect.Descriptor instead.
func (*FavoriteCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{7}
}

func (x *FavoriteCalendarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// the response to favorite a calendar
type FavoriteCalendarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteCalendarResponse) Reset() {
	*x = FavoriteCalendarResponse{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCalendarResponse) ProtoMessage() {}

func (x *FavoriteCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCalendarResponse.ProtoReflect.Descriptor instead.
func (*FavoriteCalendarResponse) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{8}
}

// the request to unfavorite a calendar
type UnfavoriteCalendarRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar to unfavorite
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfavoriteCalendarRequest) Reset() {
	*x = UnfavoriteCalendarRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfavoriteCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfavoriteCalendarRequest) ProtoMessage() {}

func (x *UnfavoriteCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfavoriteCalendarRequest.ProtoReflect.Descriptor instead.
func (*UnfavoriteCalendarRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{9}
}

func (x *UnfavoriteCalendarRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// the response to unfavorite a calendar
type UnfavoriteCalendarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfavoriteCalendarResponse) Reset() {
	*x = UnfavoriteCalendarResponse{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfavoriteCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfavoriteCalendarResponse) ProtoMessage() {}

func (x *UnfavoriteCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfavoriteCalendarResponse.ProtoReflect.Descriptor instead.
func (*UnfavoriteCalendarResponse) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{10}
}

// the calendar access details
type Calendar_CalendarAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the calendar access
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the permission of the calendar
	PermissionLevel types.PermissionLevel `protobuf:"varint,2,opt,name=permission_level,json=permissionLevel,proto3,enum=api.types.PermissionLevel" json:"permission_level,omitempty"`
	// the access state of the user to the calendar
	State types.AccessState `protobuf:"varint,3,opt,name=state,proto3,enum=api.types.AccessState" json:"state,omitempty"`
	// the target of the accept action
	AcceptTarget  types.AcceptTarget `protobuf:"varint,4,opt,name=accept_target,json=acceptTarget,proto3,enum=api.types.AcceptTarget" json:"accept_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Calendar_CalendarAccess) Reset() {
	*x = Calendar_CalendarAccess{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Calendar_CalendarAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calendar_CalendarAccess) ProtoMessage() {}

func (x *Calendar_CalendarAccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calendar_CalendarAccess.ProtoReflect.Descriptor instead.
func (*Calendar_CalendarAccess) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Calendar_CalendarAccess) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Calendar_CalendarAccess) GetPermissionLevel() types.PermissionLevel {
	if x != nil {
		return x.PermissionLevel
	}
	return types.PermissionLevel(0)
}

func (x *Calendar_CalendarAccess) GetState() types.AccessState {
	if x != nil {
		return x.State
	}
	return types.AccessState(0)
}

func (x *Calendar_CalendarAccess) GetAcceptTarget() types.AcceptTarget {
	if x != nil {
		return x.AcceptTarget
	}
	return types.AcceptTarget(0)
}

var File_api_calendars_calendar_v1alpha1_calendar_proto protoreflect.FileDescriptor

const file_api_calendars_calendar_v1alpha1_calendar_proto_rawDesc = "" +
	"\n" +
	".api/calendars/calendar/v1alpha1/calendar.proto\x12\x1fapi.calendars.calendar.v1alpha1\x1a\x1dapi/types/accept_target.proto\x1a\x1capi/types/access_state.proto\x1a api/types/permission_level.proto\x1a api/types/visibility_level.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a google/protobuf/field_mask.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xc5\x05\n" +
	"\bCalendar\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\bR\x04name\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tB\x03\xe0A\x02R\x05title\x12%\n" +
	"\vdescription\x18\x03 \x01(\tB\x03\xe0A\x01R\vdescription\x12?\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1a.api.types.VisibilityLevelB\x03\xe0A\x02R\n" +
	"visibility\x12f\n" +
	"\x0fcalendar_access\x18\x05 \x01(\v28.api.calendars.calendar.v1alpha1.Calendar.CalendarAccessB\x03\xe0A\x03R\x0ecalendarAccess\x12!\n" +
	"\tfavorited\x18\x06 \x01(\bB\x03\xe0A\x03R\tfavorited\x1a\xeb\x01\n" +
	"\x0eCalendarAccess\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x03R\x04name\x12J\n" +
	"\x10permission_level\x18\x02 \x01(\x0e2\x1a.api.types.PermissionLevelB\x03\xe0A\x03R\x0fpermissionLevel\x121\n" +
	"\x05state\x18\x03 \x01(\x0e2\x16.api.types.AccessStateB\x03\xe0A\x03R\x05state\x12A\n" +
	"\raccept_target\x18\x04 \x01(\x0e2\x17.api.types.AcceptTargetB\x03\xe0A\x03R\facceptTarget:\xa3\x01\xeaA\x9f\x01\n" +
	"(api.calendars.calendar.v1alpha1/Calendar\x12\x14calendars/{calendar}\x12!users/{user}/calendars/{calendar}\x12%circles/{circle}/calendars/{calendar}*\tcalendars2\bcalendar\"\xa1\x01\n" +
	"\x15CreateCalendarRequest\x12<\n" +
	"\x06parent\x18\x01 \x01(\tB$\xe0A\x01\xfaA\x1e\n" +
	"\x1capi.users.user.v1alpha1/UserR\x06parent\x12J\n" +
	"\bcalendar\x18\x02 \x01(\v2).api.calendars.calendar.v1alpha1.CalendarB\x03\xe0A\x02R\bcalendar\"\xb7\x01\n" +
	"\x14ListCalendarsRequest\x12<\n" +
	"\x06parent\x18\x01 \x01(\tB$\xe0A\x02\xfaA\x1e\n" +
	"\x1capi.users.user.v1alpha1/UserR\x06parent\x12 \n" +
	"\tpage_size\x18\x02 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\x03\xe0A\x01R\tpageToken\x12\x1b\n" +
	"\x06filter\x18\x04 \x01(\tB\x03\xe0A\x01R\x06filter\"\x88\x01\n" +
	"\x15ListCalendarsResponse\x12G\n" +
	"\tcalendars\x18\x01 \x03(\v2).api.calendars.calendar.v1alpha1.CalendarR\tcalendars\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xa5\x01\n" +
	"\x15UpdateCalendarRequest\x12J\n" +
	"\bcalendar\x18\x01 \x01(\v2).api.calendars.calendar.v1alpha1.CalendarB\x03\xe0A\x02R\bcalendar\x12@\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x01R\n" +
	"updateMask\"]\n" +
	"\x15DeleteCalendarRequest\x12D\n" +
	"\x04name\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x04name\"Z\n" +
	"\x12GetCalendarRequest\x12D\n" +
	"\x04name\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x04name\"_\n" +
	"\x17FavoriteCalendarRequest\x12D\n" +
	"\x04name\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x04name\"\x1a\n" +
	"\x18FavoriteCalendarResponse\"a\n" +
	"\x19UnfavoriteCalendarRequest\x12D\n" +
	"\x04name\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x04name\"\x1c\n" +
	"\x1aUnfavoriteCalendarResponse2\xbc\x15\n" +
	"\x0fCalendarService\x12\xdb\x02\n" +
	"\x0eCreateCalendar\x126.api.calendars.calendar.v1alpha1.CreateCalendarRequest\x1a).api.calendars.calendar.v1alpha1.Calendar\"\xe5\x01\x92AW\n" +
	"\x0fCalendarService\x12\x11Create a calendar\x1a1Creates a new calendar with the provided details.\xdaA\x1bparent,calendar,calendar_id\x82\xd3\xe4\x93\x02g:\bcalendarZ<:\bcalendar\"0/calendars/v1alpha1/{parent=circles/*}/calendars\"\x1d/calendars/v1alpha1/calendars\x12\x87\x03\n" +
	"\rListCalendars\x125.api.calendars.calendar.v1alpha1.ListCalendarsRequest\x1a6.api.calendars.calendar.v1alpha1.ListCalendarsResponse\"\x86\x02\x92An\n" +
	"\x0fCalendarService\x12\x0eList calendars\x1aKRetrieves a paginated list of calendars. Supports filtering and pagination.\xdaA\x06parent\x82\xd3\xe4\x93\x02\x85\x01Z0\x12./calendars/v1alpha1/{parent=users/*}/calendarsZ2\x120/calendars/v1alpha1/{parent=circles/*}/calendars\x12\x1d/calendars/v1alpha1/calendars\x12\xb0\x03\n" +
	"\x0eUpdateCalendar\x126.api.calendars.calendar.v1alpha1.UpdateCalendarRequest\x1a).api.calendars.calendar.v1alpha1.Calendar\"\xba\x02\x92AR\n" +
	"\x0fCalendarService\x12\x11Update a calendar\x1a,Updates the details of an existing calendar.\xdaA\x14calendar,update_mask\x82\xd3\xe4\x93\x02\xc7\x01:\bcalendarZE:\bcalendar29/calendars/v1alpha1/{calendar.name=circles/*/calendars/*}ZC:\bcalendar27/calendars/v1alpha1/{calendar.name=users/*/calendars/*}2//calendars/v1alpha1/{calendar.name=calendars/*}\x12\xdf\x02\n" +
	"\x0eDeleteCalendar\x126.api.calendars.calendar.v1alpha1.DeleteCalendarRequest\x1a).api.calendars.calendar.v1alpha1.Calendar\"\xe9\x01\x92AJ\n" +
	"\x0fCalendarService\x12\x11Delete a calendar\x1a$Deletes a calendar by resource name.\xdaA\x04name\x82\xd3\xe4\x93\x02\x8e\x01Z2*0/calendars/v1alpha1/{name=circles/*/calendars/*}Z0*./calendars/v1alpha1/{name=users/*/calendars/*}*&/calendars/v1alpha1/{name=calendars/*}\x12\xdf\x02\n" +
	"\vGetCalendar\x123.api.calendars.calendar.v1alpha1.GetCalendarRequest\x1a).api.calendars.calendar.v1alpha1.Calendar\"\xef\x01\x92AP\n" +
	"\x0fCalendarService\x12\x0eGet a calendar\x1a-Retrieves a single calendar by resource name.\xdaA\x04name\x82\xd3\xe4\x93\x02\x8e\x01Z2\x120/calendars/v1alpha1/{name=circles/*/calendars/*}Z0\x12./calendars/v1alpha1/{name=users/*/calendars/*}\x12&/calendars/v1alpha1/{name=calendars/*}\x12\x9b\x03\n" +
	"\x10FavoriteCalendar\x128.api.calendars.calendar.v1alpha1.FavoriteCalendarRequest\x1a9.api.calendars.calendar.v1alpha1.FavoriteCalendarResponse\"\x91\x02\x92AN\n" +
	"\x0fCalendarService\x12\x13Favorite a calendar\x1a&Favorites a calendar by resource name.\xdaA\x04name\x82\xd3\xe4\x93\x02\xb2\x01:\x01*Z>:\x01*\"9/calendars/v1alpha1/{name=circles/*/calendars/*}:favoriteZ<:\x01*\"7/calendars/v1alpha1/{name=users/*/calendars/*}:favorite\"//calendars/v1alpha1/{name=calendars/*}:favorite\x12\xab\x03\n" +
	"\x12UnfavoriteCalendar\x12:.api.calendars.calendar.v1alpha1.UnfavoriteCalendarRequest\x1a;.api.calendars.calendar.v1alpha1.UnfavoriteCalendarResponse\"\x9b\x02\x92AR\n" +
	"\x0fCalendarService\x12\x15Unfavorite a calendar\x1a(Unfavorites a calendar by resource name.\xdaA\x04name\x82\xd3\xe4\x93\x02\xb8\x01:\x01*Z@:\x01*\";/calendars/v1alpha1/{name=circles/*/calendars/*}:unfavoriteZ>:\x01*\"9/calendars/v1alpha1/{name=users/*/calendars/*}:unfavorite\"1/calendars/v1alpha1/{name=calendars/*}:unfavoriteB\x88\x03\x92AXZD\n" +
	"B\n" +
	"\n" +
	"BearerAuth\x124\b\x02\x12\x1fBearer token for authentication\x1a\rAuthorization \x02b\x10\n" +
	"\x0e\n" +
	"\n" +
	"BearerAuth\x12\x00\n" +
	"#com.api.calendars.calendar.v1alpha1B\rCalendarProtoP\x01ZXgithub.com/jcfug8/daylear/server/genapi/api/calendars/calendar/v1alpha1;calendarv1alpha1\xa2\x02\x03ACC\xaa\x02\x1fApi.Calendars.Calendar.V1alpha1\xca\x02\x1fApi\\Calendars\\Calendar\\V1alpha1\xe2\x02+Api\\Calendars\\Calendar\\V1alpha1\\GPBMetadata\xea\x02\"Api::Calendars::Calendar::V1alpha1b\x06proto3"

var (
	file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescOnce sync.Once
	file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescData []byte
)

func file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescGZIP() []byte {
	file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescOnce.Do(func() {
		file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_calendars_calendar_v1alpha1_calendar_proto_rawDesc), len(file_api_calendars_calendar_v1alpha1_calendar_proto_rawDesc)))
	})
	return file_api_calendars_calendar_v1alpha1_calendar_proto_rawDescData
}

var file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_calendars_calendar_v1alpha1_calendar_proto_goTypes = []any{
	(*Calendar)(nil),                   // 0: api.calendars.calendar.v1alpha1.Calendar
	(*CreateCalendarRequest)(nil),      // 1: api.calendars.calendar.v1alpha1.CreateCalendarRequest
	(*ListCalendarsRequest)(nil),       // 2: api.calendars.calendar.v1alpha1.ListCalendarsRequest
	(*ListCalendarsResponse)(nil),      // 3: api.calendars.calendar.v1alpha1.ListCalendarsResponse
	(*UpdateCalendarRequest)(nil),      // 4: api.calendars.calendar.v1alpha1.UpdateCalendarRequest
	(*DeleteCalendarRequest)(nil),      // 5: api.calendars.calendar.v1alpha1.DeleteCalendarRequest
	(*GetCalendarRequest)(nil),         // 6: api.calendars.calendar.v1alpha1.GetCalendarRequest
	(*FavoriteCalendarRequest)(nil),    // 7: api.calendars.calendar.v1alpha1.FavoriteCalendarRequest
	(*FavoriteCalendarResponse)(nil),   // 8: api.calendars.calendar.v1alpha1.FavoriteCalendarResponse
	(*UnfavoriteCalendarRequest)(nil),  // 9: api.calendars.calendar.v1alpha1.UnfavoriteCalendarRequest
	(*UnfavoriteCalendarResponse)(nil), // 10: api.calendars.calendar.v1alpha1.UnfavoriteCalendarResponse
	(*Calendar_CalendarAccess)(nil),    // 11: api.calendars.calendar.v1alpha1.Calendar.CalendarAccess
	(types.VisibilityLevel)(0),         // 12: api.types.VisibilityLevel
	(*fieldmaskpb.FieldMask)(nil),      // 13: google.protobuf.FieldMask
	(types.PermissionLevel)(0),         // 14: api.types.PermissionLevel
	(types.AccessState)(0),             // 15: api.types.AccessState
	(types.AcceptTarget)(0),            // 16: api.types.AcceptTarget
}
var file_api_calendars_calendar_v1alpha1_calendar_proto_depIdxs = []int32{
	12, // 0: api.calendars.calendar.v1alpha1.Calendar.visibility:type_name -> api.types.VisibilityLevel
	11, // 1: api.calendars.calendar.v1alpha1.Calendar.calendar_access:type_name -> api.calendars.calendar.v1alpha1.Calendar.CalendarAccess
	0,  // 2: api.calendars.calendar.v1alpha1.CreateCalendarRequest.calendar:type_name -> api.calendars.calendar.v1alpha1.Calendar
	0,  // 3: api.calendars.calendar.v1alpha1.ListCalendarsResponse.calendars:type_name -> api.calendars.calendar.v1alpha1.Calendar
	0,  // 4: api.calendars.calendar.v1alpha1.UpdateCalendarRequest.calendar:type_name -> api.calendars.calendar.v1alpha1.Calendar
	13, // 5: api.calendars.calendar.v1alpha1.UpdateCalendarRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 6: api.calendars.calendar.v1alpha1.Calendar.CalendarAccess.permission_level:type_name -> api.types.PermissionLevel
	15, // 7: api.calendars.calendar.v1alpha1.Calendar.CalendarAccess.state:type_name -> api.types.AccessState
	16, // 8: api.calendars.calendar.v1alpha1.Calendar.CalendarAccess.accept_target:type_name -> api.types.AcceptTarget
	1,  // 9: api.calendars.calendar.v1alpha1.CalendarService.CreateCalendar:input_type -> api.calendars.calendar.v1alpha1.CreateCalendarRequest
	2,  // 10: api.calendars.calendar.v1alpha1.CalendarService.ListCalendars:input_type -> api.calendars.calendar.v1alpha1.ListCalendarsRequest
	4,  // 11: api.calendars.calendar.v1alpha1.CalendarService.UpdateCalendar:input_type -> api.calendars.calendar.v1alpha1.UpdateCalendarRequest
	5,  // 12: api.calendars.calendar.v1alpha1.CalendarService.DeleteCalendar:input_type -> api.calendars.calendar.v1alpha1.DeleteCalendarRequest
	6,  // 13: api.calendars.calendar.v1alpha1.CalendarService.GetCalendar:input_type -> api.calendars.calendar.v1alpha1.GetCalendarRequest
	7,  // 14: api.calendars.calendar.v1alpha1.CalendarService.FavoriteCalendar:input_type -> api.calendars.calendar.v1alpha1.FavoriteCalendarRequest
	9,  // 15: api.calendars.calendar.v1alpha1.CalendarService.UnfavoriteCalendar:input_type -> api.calendars.calendar.v1alpha1.UnfavoriteCalendarRequest
	0,  // 16: api.calendars.calendar.v1alpha1.CalendarService.CreateCalendar:output_type -> api.calendars.calendar.v1alpha1.Calendar
	3,  // 17: api.calendars.calendar.v1alpha1.CalendarService.ListCalendars:output_type -> api.calendars.calendar.v1alpha1.ListCalendarsResponse
	0,  // 18: api.calendars.calendar.v1alpha1.CalendarService.UpdateCalendar:output_type -> api.calendars.calendar.v1alpha1.Calendar
	0,  // 19: api.calendars.calendar.v1alpha1.CalendarService.DeleteCalendar:output_type -> api.calendars.calendar.v1alpha1.Calendar
	0,  // 20: api.calendars.calendar.v1alpha1.CalendarService.GetCalendar:output_type -> api.calendars.calendar.v1alpha1.Calendar
	8,  // 21: api.calendars.calendar.v1alpha1.CalendarService.FavoriteCalendar:output_type -> api.calendars.calendar.v1alpha1.FavoriteCalendarResponse
	10, // 22: api.calendars.calendar.v1alpha1.CalendarService.UnfavoriteCalendar:output_type -> api.calendars.calendar.v1alpha1.UnfavoriteCalendarResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_calendars_calendar_v1alpha1_calendar_proto_init() }
func file_api_calendars_calendar_v1alpha1_calendar_proto_init() {
	if File_api_calendars_calendar_v1alpha1_calendar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_calendars_calendar_v1alpha1_calendar_proto_rawDesc), len(file_api_calendars_calendar_v1alpha1_calendar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_calendars_calendar_v1alpha1_calendar_proto_goTypes,
		DependencyIndexes: file_api_calendars_calendar_v1alpha1_calendar_proto_depIdxs,
		MessageInfos:      file_api_calendars_calendar_v1alpha1_calendar_proto_msgTypes,
	}.Build()
	File_api_calendars_calendar_v1alpha1_calendar_proto = out.File
	file_api_calendars_calendar_v1alpha1_calendar_proto_goTypes = nil
	file_api_calendars_calendar_v1alpha1_calendar_proto_depIdxs = nil
}
