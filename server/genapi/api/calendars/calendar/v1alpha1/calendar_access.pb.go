// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/calendars/calendar/v1alpha1/calendar_access.proto

package calendarv1alpha1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	types "github.com/jcfug8/daylear/server/genapi/api/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This represents the data about a user's access to a calendar
type Access struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the access
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the name of the requesting user
	Requester *Access_RequesterOrRecipient `protobuf:"bytes,2,opt,name=requester,proto3" json:"requester,omitempty"`
	// the name of the receiving user
	Recipient *Access_RequesterOrRecipient `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// the permission level of the access
	Level types.PermissionLevel `protobuf:"varint,4,opt,name=level,proto3,enum=api.types.PermissionLevel" json:"level,omitempty"`
	// the status of the access
	State types.AccessState `protobuf:"varint,5,opt,name=state,proto3,enum=api.types.AccessState" json:"state,omitempty"`
	// the target of the accept action
	AcceptTarget  types.AcceptTarget `protobuf:"varint,6,opt,name=accept_target,json=acceptTarget,proto3,enum=api.types.AcceptTarget" json:"accept_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Access) Reset() {
	*x = Access{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access) ProtoMessage() {}

func (x *Access) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access.ProtoReflect.Descriptor instead.
func (*Access) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{0}
}

func (x *Access) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Access) GetRequester() *Access_RequesterOrRecipient {
	if x != nil {
		return x.Requester
	}
	return nil
}

func (x *Access) GetRecipient() *Access_RequesterOrRecipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Access) GetLevel() types.PermissionLevel {
	if x != nil {
		return x.Level
	}
	return types.PermissionLevel(0)
}

func (x *Access) GetState() types.AccessState {
	if x != nil {
		return x.State
	}
	return types.AccessState(0)
}

func (x *Access) GetAcceptTarget() types.AcceptTarget {
	if x != nil {
		return x.AcceptTarget
	}
	return types.AcceptTarget(0)
}

// The request to create an access to a calendar
type CreateAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// parent
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The access to create
	Access        *Access `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccessRequest) Reset() {
	*x = CreateAccessRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessRequest) ProtoMessage() {}

func (x *CreateAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessRequest.ProtoReflect.Descriptor instead.
func (*CreateAccessRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccessRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateAccessRequest) GetAccess() *Access {
	if x != nil {
		return x.Access
	}
	return nil
}

// The request to delete an access to a calendar
type DeleteAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccessRequest) Reset() {
	*x = DeleteAccessRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessRequest) ProtoMessage() {}

func (x *DeleteAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccessRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteAccessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request to get an access to a calendar
type GetAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessRequest) Reset() {
	*x = GetAccessRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessRequest) ProtoMessage() {}

func (x *GetAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessRequest.ProtoReflect.Descriptor instead.
func (*GetAccessRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request to list accesses to a calendar
type ListAccessesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// parent
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The filter to apply to the list
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// The page size to apply to the list
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token to apply to the list
	PageToken     string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccessesRequest) Reset() {
	*x = ListAccessesRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessesRequest) ProtoMessage() {}

func (x *ListAccessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessesRequest.ProtoReflect.Descriptor instead.
func (*ListAccessesRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{4}
}

func (x *ListAccessesRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListAccessesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccessesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccessesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// The response to list accesses to a calendar
type ListAccessesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of accesses
	Accesses []*Access `protobuf:"bytes,1,rep,name=accesses,proto3" json:"accesses,omitempty"`
	// The next page token
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccessesResponse) Reset() {
	*x = ListAccessesResponse{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessesResponse) ProtoMessage() {}

func (x *ListAccessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessesResponse.ProtoReflect.Descriptor instead.
func (*ListAccessesResponse) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{5}
}

func (x *ListAccessesResponse) GetAccesses() []*Access {
	if x != nil {
		return x.Accesses
	}
	return nil
}

func (x *ListAccessesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The request to update an access to a calendar
type UpdateAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access
	Access *Access `protobuf:"bytes,1,opt,name=access,proto3" json:"access,omitempty"`
	// update mask
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccessRequest) Reset() {
	*x = UpdateAccessRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessRequest) ProtoMessage() {}

func (x *UpdateAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccessRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAccessRequest) GetAccess() *Access {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *UpdateAccessRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// The request to accept an access to a calendar
type AcceptAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptAccessRequest) Reset() {
	*x = AcceptAccessRequest{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAccessRequest) ProtoMessage() {}

func (x *AcceptAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAccessRequest.ProtoReflect.Descriptor instead.
func (*AcceptAccessRequest) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{7}
}

func (x *AcceptAccessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// the requester of the access
type Access_RequesterOrRecipient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Name:
	//
	//	*Access_RequesterOrRecipient_User
	//	*Access_RequesterOrRecipient_Circle
	Name          isAccess_RequesterOrRecipient_Name `protobuf_oneof:"name"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Access_RequesterOrRecipient) Reset() {
	*x = Access_RequesterOrRecipient{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access_RequesterOrRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access_RequesterOrRecipient) ProtoMessage() {}

func (x *Access_RequesterOrRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access_RequesterOrRecipient.ProtoReflect.Descriptor instead.
func (*Access_RequesterOrRecipient) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Access_RequesterOrRecipient) GetName() isAccess_RequesterOrRecipient_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Access_RequesterOrRecipient) GetUser() *Access_User {
	if x != nil {
		if x, ok := x.Name.(*Access_RequesterOrRecipient_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *Access_RequesterOrRecipient) GetCircle() *Access_Circle {
	if x != nil {
		if x, ok := x.Name.(*Access_RequesterOrRecipient_Circle); ok {
			return x.Circle
		}
	}
	return nil
}

type isAccess_RequesterOrRecipient_Name interface {
	isAccess_RequesterOrRecipient_Name()
}

type Access_RequesterOrRecipient_User struct {
	// the name of the user
	User *Access_User `protobuf:"bytes,1,opt,name=user,proto3,oneof"`
}

type Access_RequesterOrRecipient_Circle struct {
	// the name of the circle
	Circle *Access_Circle `protobuf:"bytes,2,opt,name=circle,proto3,oneof"`
}

func (*Access_RequesterOrRecipient_User) isAccess_RequesterOrRecipient_Name() {}

func (*Access_RequesterOrRecipient_Circle) isAccess_RequesterOrRecipient_Name() {}

// user data
type Access_User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the user
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the username of the user
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// the full name of the user
	GivenName string `protobuf:"bytes,3,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	// the last name of the user
	FamilyName    string `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Access_User) Reset() {
	*x = Access_User{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access_User) ProtoMessage() {}

func (x *Access_User) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access_User.ProtoReflect.Descriptor instead.
func (*Access_User) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Access_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Access_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Access_User) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *Access_User) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

// circle data
type Access_Circle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the name of the circle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the title of the circle
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// the handle of the circle
	Handle        string `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Access_Circle) Reset() {
	*x = Access_Circle{}
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access_Circle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access_Circle) ProtoMessage() {}

func (x *Access_Circle) ProtoReflect() protoreflect.Message {
	mi := &file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access_Circle.ProtoReflect.Descriptor instead.
func (*Access_Circle) Descriptor() ([]byte, []int) {
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Access_Circle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Access_Circle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Access_Circle) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

var File_api_calendars_calendar_v1alpha1_calendar_access_proto protoreflect.FileDescriptor

const file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDesc = "" +
	"\n" +
	"5api/calendars/calendar/v1alpha1/calendar_access.proto\x12\x1fapi.calendars.calendar.v1alpha1\x1a\x1dapi/types/accept_target.proto\x1a\x1capi/types/access_state.proto\x1a api/types/permission_level.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x81\b\n" +
	"\x06Access\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\bR\x04name\x12_\n" +
	"\trequester\x18\x02 \x01(\v2<.api.calendars.calendar.v1alpha1.Access.RequesterOrRecipientB\x03\xe0A\x03R\trequester\x12b\n" +
	"\trecipient\x18\x03 \x01(\v2<.api.calendars.calendar.v1alpha1.Access.RequesterOrRecipientB\x06\xe0A\x02\xe0A\x05R\trecipient\x125\n" +
	"\x05level\x18\x04 \x01(\x0e2\x1a.api.types.PermissionLevelB\x03\xe0A\x02R\x05level\x121\n" +
	"\x05state\x18\x05 \x01(\x0e2\x16.api.types.AccessStateB\x03\xe0A\x03R\x05state\x12A\n" +
	"\raccept_target\x18\x06 \x01(\x0e2\x17.api.types.AcceptTargetB\x03\xe0A\x03R\facceptTarget\x1a\xac\x01\n" +
	"\x14RequesterOrRecipient\x12B\n" +
	"\x04user\x18\x01 \x01(\v2,.api.calendars.calendar.v1alpha1.Access.UserH\x00R\x04user\x12H\n" +
	"\x06circle\x18\x02 \x01(\v2..api.calendars.calendar.v1alpha1.Access.CircleH\x00R\x06circleB\x06\n" +
	"\x04name\x1a\x8a\x01\n" +
	"\x04User\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\x12\x1f\n" +
	"\busername\x18\x02 \x01(\tB\x03\xe0A\x03R\busername\x12\"\n" +
	"\n" +
	"given_name\x18\x03 \x01(\tB\x03\xe0A\x03R\tgivenName\x12$\n" +
	"\vfamily_name\x18\x04 \x01(\tB\x03\xe0A\x03R\n" +
	"familyName\x1aY\n" +
	"\x06Circle\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tB\x03\xe0A\x03R\x05title\x12\x1b\n" +
	"\x06handle\x18\x03 \x01(\tB\x03\xe0A\x03R\x06handle:\xd4\x01\xeaA\xd0\x01\n" +
	"&api.calendars.calendar.v1alpha1/Access\x12&calendars/{calendar}/accesses/{access}\x123users/{user}/calendars/{calendar}/accesses/{access}\x127circles/{circle}/calendars/{calendar}/accesses/{access}*\baccesses2\x06access\"\xa5\x01\n" +
	"\x13CreateAccessRequest\x12H\n" +
	"\x06parent\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x06parent\x12D\n" +
	"\x06access\x18\x02 \x01(\v2'.api.calendars.calendar.v1alpha1.AccessB\x03\xe0A\x02R\x06access\"Y\n" +
	"\x13DeleteAccessRequest\x12B\n" +
	"\x04name\x18\x01 \x01(\tB.\xe0A\x02\xfaA(\n" +
	"&api.calendars.calendar.v1alpha1/AccessR\x04name\"V\n" +
	"\x10GetAccessRequest\x12B\n" +
	"\x04name\x18\x01 \x01(\tB.\xe0A\x02\xfaA(\n" +
	"&api.calendars.calendar.v1alpha1/AccessR\x04name\"\xc2\x01\n" +
	"\x13ListAccessesRequest\x12H\n" +
	"\x06parent\x18\x01 \x01(\tB0\xe0A\x02\xfaA*\n" +
	"(api.calendars.calendar.v1alpha1/CalendarR\x06parent\x12\x1b\n" +
	"\x06filter\x18\x02 \x01(\tB\x03\xe0A\x01R\x06filter\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\x03\xe0A\x01R\tpageToken\"\x83\x01\n" +
	"\x14ListAccessesResponse\x12C\n" +
	"\baccesses\x18\x01 \x03(\v2'.api.calendars.calendar.v1alpha1.AccessR\baccesses\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x9d\x01\n" +
	"\x13UpdateAccessRequest\x12D\n" +
	"\x06access\x18\x01 \x01(\v2'.api.calendars.calendar.v1alpha1.AccessB\x03\xe0A\x02R\x06access\x12@\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x01R\n" +
	"updateMask\"Y\n" +
	"\x13AcceptAccessRequest\x12B\n" +
	"\x04name\x18\x01 \x01(\tB.\xe0A\x02\xfaA(\n" +
	"&api.calendars.calendar.v1alpha1/AccessR\x04name2\xa7\x11\n" +
	"\x15CalendarAccessService\x12\xd1\x02\n" +
	"\fCreateAccess\x124.api.calendars.calendar.v1alpha1.CreateAccessRequest\x1a'.api.calendars.calendar.v1alpha1.Access\"\xe1\x01\x92A\x8c\x01\n" +
	"\x15CalendarAccessService\x12-Grant a user or calendar access to a calendar\x1aDGrants a user or calendar a specific permission level to a calendar.\xdaA\rparent,access\x82\xd3\xe4\x93\x02;:\x06access\"1/calendars/v1alpha1/{parent=calendars/*}/accesses\x12\x89\x02\n" +
	"\fDeleteAccess\x124.api.calendars.calendar.v1alpha1.DeleteAccessRequest\x1a\x16.google.protobuf.Empty\"\xaa\x01\x92Ag\n" +
	"\x15CalendarAccessService\x12\x18Delete a calendar access\x1a4Removes a user's or calendar's access to a calendar.\xdaA\x04name\x82\xd3\xe4\x93\x023*1/calendars/v1alpha1/{name=calendars/*/accesses/*}\x12\x90\x02\n" +
	"\tGetAccess\x121.api.calendars.calendar.v1alpha1.GetAccessRequest\x1a'.api.calendars.calendar.v1alpha1.Access\"\xa6\x01\x92Ac\n" +
	"\x15CalendarAccessService\x12\x15Get a calendar access\x1a3Retrieves details about a specific calendar access.\xdaA\x04name\x82\xd3\xe4\x93\x023\x121/calendars/v1alpha1/{name=calendars/*/accesses/*}\x12\xb9\x04\n" +
	"\fListAccesses\x124.api.calendars.calendar.v1alpha1.ListAccessesRequest\x1a5.api.calendars.calendar.v1alpha1.ListAccessesResponse\"\xbb\x03\x92A\xf8\x01\n" +
	"\x15CalendarAccessService\x12\x16List calendar accesses\x1a\xc6\x01Lists all users and calendars with access to a calendar. If no calendar is provided, the response will only return the accesses for the current user (or calendar if the calendar header is provided).\xdaA\x06parent\x82\xd3\xe4\x93\x02\xaf\x01Z;\x129/calendars/v1alpha1/{parent=users/*/calendars/*}/accessesZ=\x12;/calendars/v1alpha1/{parent=circles/*/calendars/*}/accesses\x121/calendars/v1alpha1/{parent=calendars/*}/accesses\x12\xc3\x02\n" +
	"\fUpdateAccess\x124.api.calendars.calendar.v1alpha1.UpdateAccessRequest\x1a'.api.calendars.calendar.v1alpha1.Access\"\xd3\x01\x92As\n" +
	"\x15CalendarAccessService\x12\x18Update a calendar access\x1a@Updates the permission level or recipient for a calendar access.\xdaA\x12access,update_mask\x82\xd3\xe4\x93\x02B:\x06access28/calendars/v1alpha1/{access.name=calendars/*/accesses/*}\x12\xc0\x02\n" +
	"\fAcceptAccess\x124.api.calendars.calendar.v1alpha1.AcceptAccessRequest\x1a'.api.calendars.calendar.v1alpha1.Access\"\xd0\x01\x92A\x82\x01\n" +
	"\x15CalendarAccessService\x12\x18Accept a calendar access\x1aOAccepts a pending calendar access, changing its state from PENDING to ACCEPTED.\xdaA\x04name\x82\xd3\xe4\x93\x02=:\x01*\"8/calendars/v1alpha1/{name=calendars/*/accesses/*}:accept\x1aV\x92AS\x12\x1aCalendar Access management\x1a5\n" +
	"\x19Daylear API Documentation\x12\x18https://daylear.com/docsB\x8e\x03\x92AXZD\n" +
	"B\n" +
	"\n" +
	"BearerAuth\x124\b\x02\x12\x1fBearer token for authentication\x1a\rAuthorization \x02b\x10\n" +
	"\x0e\n" +
	"\n" +
	"BearerAuth\x12\x00\n" +
	"#com.api.calendars.calendar.v1alpha1B\x13CalendarAccessProtoP\x01ZXgithub.com/jcfug8/daylear/server/genapi/api/calendars/calendar/v1alpha1;calendarv1alpha1\xa2\x02\x03ACC\xaa\x02\x1fApi.Calendars.Calendar.V1alpha1\xca\x02\x1fApi\\Calendars\\Calendar\\V1alpha1\xe2\x02+Api\\Calendars\\Calendar\\V1alpha1\\GPBMetadata\xea\x02\"Api::Calendars::Calendar::V1alpha1b\x06proto3"

var (
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescOnce sync.Once
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescData []byte
)

func file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescGZIP() []byte {
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescOnce.Do(func() {
		file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDesc), len(file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDesc)))
	})
	return file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDescData
}

var file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_calendars_calendar_v1alpha1_calendar_access_proto_goTypes = []any{
	(*Access)(nil),                      // 0: api.calendars.calendar.v1alpha1.Access
	(*CreateAccessRequest)(nil),         // 1: api.calendars.calendar.v1alpha1.CreateAccessRequest
	(*DeleteAccessRequest)(nil),         // 2: api.calendars.calendar.v1alpha1.DeleteAccessRequest
	(*GetAccessRequest)(nil),            // 3: api.calendars.calendar.v1alpha1.GetAccessRequest
	(*ListAccessesRequest)(nil),         // 4: api.calendars.calendar.v1alpha1.ListAccessesRequest
	(*ListAccessesResponse)(nil),        // 5: api.calendars.calendar.v1alpha1.ListAccessesResponse
	(*UpdateAccessRequest)(nil),         // 6: api.calendars.calendar.v1alpha1.UpdateAccessRequest
	(*AcceptAccessRequest)(nil),         // 7: api.calendars.calendar.v1alpha1.AcceptAccessRequest
	(*Access_RequesterOrRecipient)(nil), // 8: api.calendars.calendar.v1alpha1.Access.RequesterOrRecipient
	(*Access_User)(nil),                 // 9: api.calendars.calendar.v1alpha1.Access.User
	(*Access_Circle)(nil),               // 10: api.calendars.calendar.v1alpha1.Access.Circle
	(types.PermissionLevel)(0),          // 11: api.types.PermissionLevel
	(types.AccessState)(0),              // 12: api.types.AccessState
	(types.AcceptTarget)(0),             // 13: api.types.AcceptTarget
	(*fieldmaskpb.FieldMask)(nil),       // 14: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),               // 15: google.protobuf.Empty
}
var file_api_calendars_calendar_v1alpha1_calendar_access_proto_depIdxs = []int32{
	8,  // 0: api.calendars.calendar.v1alpha1.Access.requester:type_name -> api.calendars.calendar.v1alpha1.Access.RequesterOrRecipient
	8,  // 1: api.calendars.calendar.v1alpha1.Access.recipient:type_name -> api.calendars.calendar.v1alpha1.Access.RequesterOrRecipient
	11, // 2: api.calendars.calendar.v1alpha1.Access.level:type_name -> api.types.PermissionLevel
	12, // 3: api.calendars.calendar.v1alpha1.Access.state:type_name -> api.types.AccessState
	13, // 4: api.calendars.calendar.v1alpha1.Access.accept_target:type_name -> api.types.AcceptTarget
	0,  // 5: api.calendars.calendar.v1alpha1.CreateAccessRequest.access:type_name -> api.calendars.calendar.v1alpha1.Access
	0,  // 6: api.calendars.calendar.v1alpha1.ListAccessesResponse.accesses:type_name -> api.calendars.calendar.v1alpha1.Access
	0,  // 7: api.calendars.calendar.v1alpha1.UpdateAccessRequest.access:type_name -> api.calendars.calendar.v1alpha1.Access
	14, // 8: api.calendars.calendar.v1alpha1.UpdateAccessRequest.update_mask:type_name -> google.protobuf.FieldMask
	9,  // 9: api.calendars.calendar.v1alpha1.Access.RequesterOrRecipient.user:type_name -> api.calendars.calendar.v1alpha1.Access.User
	10, // 10: api.calendars.calendar.v1alpha1.Access.RequesterOrRecipient.circle:type_name -> api.calendars.calendar.v1alpha1.Access.Circle
	1,  // 11: api.calendars.calendar.v1alpha1.CalendarAccessService.CreateAccess:input_type -> api.calendars.calendar.v1alpha1.CreateAccessRequest
	2,  // 12: api.calendars.calendar.v1alpha1.CalendarAccessService.DeleteAccess:input_type -> api.calendars.calendar.v1alpha1.DeleteAccessRequest
	3,  // 13: api.calendars.calendar.v1alpha1.CalendarAccessService.GetAccess:input_type -> api.calendars.calendar.v1alpha1.GetAccessRequest
	4,  // 14: api.calendars.calendar.v1alpha1.CalendarAccessService.ListAccesses:input_type -> api.calendars.calendar.v1alpha1.ListAccessesRequest
	6,  // 15: api.calendars.calendar.v1alpha1.CalendarAccessService.UpdateAccess:input_type -> api.calendars.calendar.v1alpha1.UpdateAccessRequest
	7,  // 16: api.calendars.calendar.v1alpha1.CalendarAccessService.AcceptAccess:input_type -> api.calendars.calendar.v1alpha1.AcceptAccessRequest
	0,  // 17: api.calendars.calendar.v1alpha1.CalendarAccessService.CreateAccess:output_type -> api.calendars.calendar.v1alpha1.Access
	15, // 18: api.calendars.calendar.v1alpha1.CalendarAccessService.DeleteAccess:output_type -> google.protobuf.Empty
	0,  // 19: api.calendars.calendar.v1alpha1.CalendarAccessService.GetAccess:output_type -> api.calendars.calendar.v1alpha1.Access
	5,  // 20: api.calendars.calendar.v1alpha1.CalendarAccessService.ListAccesses:output_type -> api.calendars.calendar.v1alpha1.ListAccessesResponse
	0,  // 21: api.calendars.calendar.v1alpha1.CalendarAccessService.UpdateAccess:output_type -> api.calendars.calendar.v1alpha1.Access
	0,  // 22: api.calendars.calendar.v1alpha1.CalendarAccessService.AcceptAccess:output_type -> api.calendars.calendar.v1alpha1.Access
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_calendars_calendar_v1alpha1_calendar_access_proto_init() }
func file_api_calendars_calendar_v1alpha1_calendar_access_proto_init() {
	if File_api_calendars_calendar_v1alpha1_calendar_access_proto != nil {
		return
	}
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes[8].OneofWrappers = []any{
		(*Access_RequesterOrRecipient_User)(nil),
		(*Access_RequesterOrRecipient_Circle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDesc), len(file_api_calendars_calendar_v1alpha1_calendar_access_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_calendars_calendar_v1alpha1_calendar_access_proto_goTypes,
		DependencyIndexes: file_api_calendars_calendar_v1alpha1_calendar_access_proto_depIdxs,
		MessageInfos:      file_api_calendars_calendar_v1alpha1_calendar_access_proto_msgTypes,
	}.Build()
	File_api_calendars_calendar_v1alpha1_calendar_access_proto = out.File
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_goTypes = nil
	file_api_calendars_calendar_v1alpha1_calendar_access_proto_depIdxs = nil
}
