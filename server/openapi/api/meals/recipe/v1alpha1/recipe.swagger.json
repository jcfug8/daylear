{
  "swagger": "2.0",
  "info": {
    "title": "api/meals/recipe/v1alpha1/recipe.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RecipeService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/meals/v1alpha1/recipes": {
      "get": {
        "summary": "List recipes",
        "description": "Retrieves a paginated list of recipes. Supports filtering and pagination.",
        "operationId": "RecipeService_ListRecipes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListRecipesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "returned page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "used to specify the page token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "used to specify the filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      },
      "post": {
        "summary": "Create a recipe",
        "description": "Creates a new recipe with the provided details.",
        "operationId": "RecipeService_CreateRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "recipe",
            "description": "the recipe to create",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe",
              "required": [
                "recipe"
              ]
            }
          },
          {
            "name": "recipeId",
            "description": "the id of the recipe",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/meals/v1alpha1/recipes:scrape": {
      "post": {
        "summary": "Scrape a recipe from a uri",
        "description": "Scrapes a recipe from a uri.",
        "operationId": "RecipeService_ScrapeRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ScrapeRecipeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ScrapeRecipeRequest"
            }
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/meals/v1alpha1/{name}": {
      "get": {
        "summary": "Get a recipe",
        "description": "Retrieves a single recipe by resource name.",
        "operationId": "RecipeService_GetRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the recipe to get",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "recipes/[^/]+"
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      },
      "delete": {
        "summary": "Delete a recipe",
        "description": "Deletes a recipe by resource name.",
        "operationId": "RecipeService_DeleteRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the recipe to delete",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "recipes/[^/]+"
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/meals/v1alpha1/{recipe.name_1}": {
      "patch": {
        "summary": "Update a recipe",
        "description": "Updates the details of an existing recipe.",
        "operationId": "RecipeService_UpdateRecipe2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "recipe.name_1",
            "description": "the name of the recipe",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+/recipes/[^/]+"
          },
          {
            "name": "recipe",
            "description": "the recipe to update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "the title of the recipe"
                },
                "description": {
                  "type": "string",
                  "title": "the description of the recipe"
                },
                "directions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/RecipeDirection"
                  },
                  "title": "the steps to make the recipe"
                },
                "ingredientGroups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/RecipeIngredientGroup"
                  },
                  "title": "the ingredient groups in the recipe"
                },
                "imageUri": {
                  "type": "string",
                  "title": "image url"
                },
                "visibility": {
                  "$ref": "#/definitions/typesVisibilityLevel",
                  "title": "the visibility of the recipe"
                },
                "recipeAccess": {
                  "$ref": "#/definitions/RecipeRecipeAccess",
                  "title": "the access details for the current user/circle",
                  "readOnly": true
                },
                "citation": {
                  "type": "string",
                  "title": "citation or reference to another creative work"
                },
                "cookDuration": {
                  "type": "string",
                  "title": "the duration it takes to cook the recipe"
                },
                "cookingMethod": {
                  "type": "string",
                  "description": "the method of cooking, such as Frying, Steaming, etc."
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "the categories of the recipe (e.g., appetizer, entree, etc.)"
                },
                "yieldAmount": {
                  "type": "string",
                  "title": "the quantity produced by the recipe (e.g., number of servings)"
                },
                "cuisines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "the cuisines of the recipe (e.g., French, Ethiopian, etc.)"
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "title": "the time the recipe was created (UTC)",
                  "readOnly": true
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "title": "the time the recipe was last updated (UTC)",
                  "readOnly": true
                },
                "prepDuration": {
                  "type": "string",
                  "title": "the duration it takes to prepare the recipe"
                },
                "totalDuration": {
                  "type": "string",
                  "title": "the total duration for the recipe"
                }
              },
              "title": "the recipe to update",
              "required": [
                "title",
                "visibility",
                "recipe"
              ]
            }
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    },
    "/meals/v1alpha1/{recipe.name}": {
      "patch": {
        "summary": "Update a recipe",
        "description": "Updates the details of an existing recipe.",
        "operationId": "RecipeService_UpdateRecipe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Recipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "recipe.name",
            "description": "the name of the recipe",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "recipes/[^/]+"
          },
          {
            "name": "recipe",
            "description": "the recipe to update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "the title of the recipe"
                },
                "description": {
                  "type": "string",
                  "title": "the description of the recipe"
                },
                "directions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/RecipeDirection"
                  },
                  "title": "the steps to make the recipe"
                },
                "ingredientGroups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/RecipeIngredientGroup"
                  },
                  "title": "the ingredient groups in the recipe"
                },
                "imageUri": {
                  "type": "string",
                  "title": "image url"
                },
                "visibility": {
                  "$ref": "#/definitions/typesVisibilityLevel",
                  "title": "the visibility of the recipe"
                },
                "recipeAccess": {
                  "$ref": "#/definitions/RecipeRecipeAccess",
                  "title": "the access details for the current user/circle",
                  "readOnly": true
                },
                "citation": {
                  "type": "string",
                  "title": "citation or reference to another creative work"
                },
                "cookDuration": {
                  "type": "string",
                  "title": "the duration it takes to cook the recipe"
                },
                "cookingMethod": {
                  "type": "string",
                  "description": "the method of cooking, such as Frying, Steaming, etc."
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "the categories of the recipe (e.g., appetizer, entree, etc.)"
                },
                "yieldAmount": {
                  "type": "string",
                  "title": "the quantity produced by the recipe (e.g., number of servings)"
                },
                "cuisines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "the cuisines of the recipe (e.g., French, Ethiopian, etc.)"
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "title": "the time the recipe was created (UTC)",
                  "readOnly": true
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "title": "the time the recipe was last updated (UTC)",
                  "readOnly": true
                },
                "prepDuration": {
                  "type": "string",
                  "title": "the duration it takes to prepare the recipe"
                },
                "totalDuration": {
                  "type": "string",
                  "title": "the total duration for the recipe"
                }
              },
              "title": "the recipe to update",
              "required": [
                "title",
                "visibility",
                "recipe"
              ]
            }
          },
          {
            "name": "X-Daylear-Circle",
            "description": "the name of the circle to act as",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RecipeService"
        ]
      }
    }
  },
  "definitions": {
    "IngredientMeasurementConjunction": {
      "type": "string",
      "enum": [
        "MEASUREMENT_CONJUNCTION_UNSPECIFIED",
        "MEASUREMENT_CONJUNCTION_AND",
        "MEASUREMENT_CONJUNCTION_TO",
        "MEASUREMENT_CONJUNCTION_OR"
      ],
      "default": "MEASUREMENT_CONJUNCTION_UNSPECIFIED",
      "description": "- MEASUREMENT_CONJUNCTION_UNSPECIFIED: the measurement conjunction is unspecified\n - MEASUREMENT_CONJUNCTION_AND: the measurement conjunction is and\n - MEASUREMENT_CONJUNCTION_TO: the measurement conjunction is to\n - MEASUREMENT_CONJUNCTION_OR: the measurement conjunction is or",
      "title": "the conjunction of the measurement"
    },
    "RecipeDirection": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "the title of the step"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the steps in the instruction"
        }
      },
      "title": "the directions to make the recipe",
      "required": [
        "steps"
      ]
    },
    "RecipeIngredient": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "the name of the ingredient"
        },
        "optional": {
          "type": "boolean",
          "title": "wheter the ingredient is optional"
        },
        "measurementAmount": {
          "type": "number",
          "format": "double",
          "title": "the quantity of the ingredient"
        },
        "measurementType": {
          "$ref": "#/definitions/RecipeMeasurementType",
          "title": "the type of measurement"
        },
        "measurementConjunction": {
          "$ref": "#/definitions/IngredientMeasurementConjunction",
          "title": "measurment conjunction"
        },
        "secondMeasurementAmount": {
          "type": "number",
          "format": "double",
          "title": "the second quantity of the ingredient"
        },
        "secondMeasurementType": {
          "$ref": "#/definitions/RecipeMeasurementType",
          "title": "the type of measurement for the second quantity"
        }
      },
      "title": "an ingredient in a recipe",
      "required": [
        "title"
      ]
    },
    "RecipeIngredientGroup": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "the name of the group"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecipeIngredient"
          },
          "title": "the ingredients in the group"
        }
      },
      "title": "an ingredient group in a recipe",
      "required": [
        "ingredients"
      ]
    },
    "RecipeMeasurementType": {
      "type": "string",
      "enum": [
        "MEASUREMENT_TYPE_UNSPECIFIED",
        "MEASUREMENT_TYPE_TABLESPOON",
        "MEASUREMENT_TYPE_TEASPOON",
        "MEASUREMENT_TYPE_OUNCE",
        "MEASUREMENT_TYPE_POUND",
        "MEASUREMENT_TYPE_GRAM",
        "MEASUREMENT_TYPE_MILLILITER",
        "MEASUREMENT_TYPE_LITER",
        "MEASUREMENT_TYPE_CUP"
      ],
      "default": "MEASUREMENT_TYPE_UNSPECIFIED",
      "description": "- MEASUREMENT_TYPE_UNSPECIFIED: the measurement is in cups\n - MEASUREMENT_TYPE_TABLESPOON: the measurement is in tablespoons\n - MEASUREMENT_TYPE_TEASPOON: the measurement is in teaspoons\n - MEASUREMENT_TYPE_OUNCE: the measurement is in ounces\n - MEASUREMENT_TYPE_POUND: the measurement is in pounds\n - MEASUREMENT_TYPE_GRAM: the measurement is in grams\n - MEASUREMENT_TYPE_MILLILITER: the measurement is in milliliters\n - MEASUREMENT_TYPE_LITER: the measurement is in liters\n - MEASUREMENT_TYPE_CUP: the measurement is in cups",
      "title": "the type of measurement"
    },
    "RecipeRecipeAccess": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the recipe access",
          "readOnly": true
        },
        "permissionLevel": {
          "$ref": "#/definitions/typesPermissionLevel",
          "title": "the permission of the recipe",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/typesAccessState",
          "title": "the access state of the user to the recipe",
          "readOnly": true
        }
      },
      "title": "the recipe access details"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesAccessState": {
      "type": "string",
      "enum": [
        "ACCESS_STATE_UNSPECIFIED",
        "ACCESS_STATE_PENDING",
        "ACCESS_STATE_ACCEPTED"
      ],
      "default": "ACCESS_STATE_UNSPECIFIED",
      "description": "- ACCESS_STATE_UNSPECIFIED: This status should never get used.\n - ACCESS_STATE_PENDING: The access is pending and can either be accepted or deleted.\n - ACCESS_STATE_ACCEPTED: The access is accepted and can be deleted.",
      "title": "the visibility levels"
    },
    "typesPermissionLevel": {
      "type": "string",
      "enum": [
        "PERMISSION_LEVEL_UNSPECIFIED",
        "PERMISSION_LEVEL_PUBLIC",
        "PERMISSION_LEVEL_READ",
        "PERMISSION_LEVEL_WRITE",
        "PERMISSION_LEVEL_ADMIN"
      ],
      "default": "PERMISSION_LEVEL_UNSPECIFIED",
      "description": "- PERMISSION_LEVEL_UNSPECIFIED: the permission is not specified\n - PERMISSION_LEVEL_PUBLIC: the permission is public\n - PERMISSION_LEVEL_READ: the permission is read\n - PERMISSION_LEVEL_WRITE: the permission is write\n - PERMISSION_LEVEL_ADMIN: the permission is admin",
      "title": "the permission levels"
    },
    "typesVisibilityLevel": {
      "type": "string",
      "enum": [
        "VISIBILITY_LEVEL_UNSPECIFIED",
        "VISIBILITY_LEVEL_PUBLIC",
        "VISIBILITY_LEVEL_RESTRICTED",
        "VISIBILITY_LEVEL_PRIVATE",
        "VISIBILITY_LEVEL_HIDDEN"
      ],
      "default": "VISIBILITY_LEVEL_UNSPECIFIED",
      "description": "- VISIBILITY_LEVEL_UNSPECIFIED: the visibility is not specified\n - VISIBILITY_LEVEL_PUBLIC: the visibility is public\n - VISIBILITY_LEVEL_RESTRICTED: the visibility is restricted\n - VISIBILITY_LEVEL_PRIVATE: the visibility is private\n - VISIBILITY_LEVEL_HIDDEN: the visibility is hidden",
      "title": "the visibility levels"
    },
    "v1alpha1ListRecipesResponse": {
      "type": "object",
      "properties": {
        "recipes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1Recipe"
          },
          "title": "the recipes"
        },
        "nextPageToken": {
          "type": "string",
          "title": "the next page token"
        }
      },
      "title": "the response to list recipes"
    },
    "v1alpha1Recipe": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the recipe"
        },
        "title": {
          "type": "string",
          "title": "the title of the recipe"
        },
        "description": {
          "type": "string",
          "title": "the description of the recipe"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecipeDirection"
          },
          "title": "the steps to make the recipe"
        },
        "ingredientGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RecipeIngredientGroup"
          },
          "title": "the ingredient groups in the recipe"
        },
        "imageUri": {
          "type": "string",
          "title": "image url"
        },
        "visibility": {
          "$ref": "#/definitions/typesVisibilityLevel",
          "title": "the visibility of the recipe"
        },
        "recipeAccess": {
          "$ref": "#/definitions/RecipeRecipeAccess",
          "title": "the access details for the current user/circle",
          "readOnly": true
        },
        "citation": {
          "type": "string",
          "title": "citation or reference to another creative work"
        },
        "cookDuration": {
          "type": "string",
          "title": "the duration it takes to cook the recipe"
        },
        "cookingMethod": {
          "type": "string",
          "description": "the method of cooking, such as Frying, Steaming, etc."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the categories of the recipe (e.g., appetizer, entree, etc.)"
        },
        "yieldAmount": {
          "type": "string",
          "title": "the quantity produced by the recipe (e.g., number of servings)"
        },
        "cuisines": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "the cuisines of the recipe (e.g., French, Ethiopian, etc.)"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time the recipe was created (UTC)",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "title": "the time the recipe was last updated (UTC)",
          "readOnly": true
        },
        "prepDuration": {
          "type": "string",
          "title": "the duration it takes to prepare the recipe"
        },
        "totalDuration": {
          "type": "string",
          "title": "the total duration for the recipe"
        }
      },
      "title": "the main recipe object",
      "required": [
        "title",
        "visibility"
      ]
    },
    "v1alpha1ScrapeRecipeRequest": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "title": "the uri of the recipe"
        }
      },
      "title": "the request to scrape a recipe from a url",
      "required": [
        "uri"
      ]
    },
    "v1alpha1ScrapeRecipeResponse": {
      "type": "object",
      "properties": {
        "recipe": {
          "$ref": "#/definitions/v1alpha1Recipe",
          "title": "the recipe"
        }
      },
      "title": "the response to scrape a recipe from a url"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "Bearer token for authentication",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
