{
  "swagger": "2.0",
  "info": {
    "title": "api/circles/circle/v1alpha1/circle.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CircleService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/circles/v1alpha1/circles": {
      "get": {
        "summary": "List circles",
        "description": "Retrieves a paginated list of circles. Supports filtering and pagination.",
        "operationId": "CircleService_ListCircles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCirclesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "the parent of the circles",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "the page token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "used to specify the filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CircleService"
        ]
      },
      "post": {
        "summary": "Create a circle",
        "description": "Creates a new circle with the provided details.",
        "operationId": "CircleService_CreateCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/circlev1alpha1Circle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "circle",
            "description": "the circle to create",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/circlev1alpha1Circle",
              "required": [
                "circle"
              ]
            }
          },
          {
            "name": "circleId",
            "description": "the id of the circle",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{circle.name}": {
      "patch": {
        "summary": "Update a circle",
        "description": "Updates the details of an existing circle.",
        "operationId": "CircleService_UpdateCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/circlev1alpha1Circle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "circle.name",
            "description": "the name of the circle",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+"
          },
          {
            "name": "circle",
            "description": "the circle to update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "the title of the circle"
                },
                "imageUri": {
                  "type": "string",
                  "title": "the image url for the circle"
                },
                "visibility": {
                  "$ref": "#/definitions/typesVisibilityLevel",
                  "title": "the visibility of the circle"
                },
                "circleAccess": {
                  "$ref": "#/definitions/CircleCircleAccess",
                  "title": "circle access data",
                  "readOnly": true
                },
                "handle": {
                  "type": "string",
                  "title": "the unique handle for the circle (like a username, must be unique, user-friendly, and can be used for sharing)"
                },
                "description": {
                  "type": "string",
                  "title": "the description of the circle"
                },
                "favorited": {
                  "type": "boolean",
                  "title": "whether the current user has favorited this circle",
                  "readOnly": true
                }
              },
              "title": "the circle to update",
              "required": [
                "title",
                "visibility",
                "circle"
              ]
            }
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{name_1}:favorite": {
      "post": {
        "summary": "Favorite a circle",
        "description": "Favorites a circle by resource name.",
        "operationId": "CircleService_FavoriteCircle2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1FavoriteCircleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "the name of the circle to favorite",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/circles/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircleServiceFavoriteCircleBody"
            }
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{name_1}:unfavorite": {
      "post": {
        "summary": "Unfavorite a circle",
        "description": "Unfavorites a circle by resource name.",
        "operationId": "CircleService_UnfavoriteCircle2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnfavoriteCircleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name_1",
            "description": "the name of the circle to unfavorite",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/circles/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircleServiceUnfavoriteCircleBody"
            }
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{name}": {
      "get": {
        "summary": "Get a circle",
        "description": "Retrieves a single circle by resource name.",
        "operationId": "CircleService_GetCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/circlev1alpha1Circle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the circle to get",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+"
          }
        ],
        "tags": [
          "CircleService"
        ]
      },
      "delete": {
        "summary": "Delete a circle",
        "description": "Deletes a circle by resource name.",
        "operationId": "CircleService_DeleteCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/circlev1alpha1Circle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the circle",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+"
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{name}:favorite": {
      "post": {
        "summary": "Favorite a circle",
        "description": "Favorites a circle by resource name.",
        "operationId": "CircleService_FavoriteCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1FavoriteCircleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the circle to favorite",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircleServiceFavoriteCircleBody"
            }
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{name}:unfavorite": {
      "post": {
        "summary": "Unfavorite a circle",
        "description": "Unfavorites a circle by resource name.",
        "operationId": "CircleService_UnfavoriteCircle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UnfavoriteCircleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the name of the circle to unfavorite",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "circles/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircleServiceUnfavoriteCircleBody"
            }
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    },
    "/circles/v1alpha1/{parent}/circles": {
      "get": {
        "summary": "List circles",
        "description": "Retrieves a paginated list of circles. Supports filtering and pagination.",
        "operationId": "CircleService_ListCircles2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListCirclesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "the parent of the circles",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "the page size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "the page token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "used to specify the filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CircleService"
        ]
      }
    }
  },
  "definitions": {
    "CircleCircleAccess": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the circle access",
          "readOnly": true
        },
        "permissionLevel": {
          "$ref": "#/definitions/typesPermissionLevel",
          "title": "the permission of the circle",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/typesAccessState",
          "title": "the access state of the user to the circle",
          "readOnly": true
        },
        "acceptTarget": {
          "$ref": "#/definitions/typesAcceptTarget",
          "title": "the accept target of the access (the user or circle that is accepting the access)",
          "readOnly": true
        }
      },
      "title": "the circle access details"
    },
    "CircleServiceFavoriteCircleBody": {
      "type": "object",
      "title": "the request to favorite a circle"
    },
    "CircleServiceUnfavoriteCircleBody": {
      "type": "object",
      "title": "the request to unfavorite a circle"
    },
    "circlev1alpha1Circle": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the circle"
        },
        "title": {
          "type": "string",
          "title": "the title of the circle"
        },
        "imageUri": {
          "type": "string",
          "title": "the image url for the circle"
        },
        "visibility": {
          "$ref": "#/definitions/typesVisibilityLevel",
          "title": "the visibility of the circle"
        },
        "circleAccess": {
          "$ref": "#/definitions/CircleCircleAccess",
          "title": "circle access data",
          "readOnly": true
        },
        "handle": {
          "type": "string",
          "title": "the unique handle for the circle (like a username, must be unique, user-friendly, and can be used for sharing)"
        },
        "description": {
          "type": "string",
          "title": "the description of the circle"
        },
        "favorited": {
          "type": "boolean",
          "title": "whether the current user has favorited this circle",
          "readOnly": true
        }
      },
      "title": "the main user circle",
      "required": [
        "title",
        "visibility"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesAcceptTarget": {
      "type": "string",
      "enum": [
        "ACCEPT_TARGET_UNSPECIFIED",
        "ACCEPT_TARGET_RECIPIENT",
        "ACCEPT_TARGET_RESOURCE"
      ],
      "default": "ACCEPT_TARGET_UNSPECIFIED",
      "description": "- ACCEPT_TARGET_UNSPECIFIED: Acceptance not required or not applicable\n - ACCEPT_TARGET_RECIPIENT: The recipient or someone with correct access to the recipient can accept the access request\n - ACCEPT_TARGET_RESOURCE: The resource owner or someone with correct access to the resource can accept the access request",
      "title": "The target of the accept action, or who can accept the access request"
    },
    "typesAccessState": {
      "type": "string",
      "enum": [
        "ACCESS_STATE_UNSPECIFIED",
        "ACCESS_STATE_PENDING",
        "ACCESS_STATE_ACCEPTED"
      ],
      "default": "ACCESS_STATE_UNSPECIFIED",
      "description": "- ACCESS_STATE_UNSPECIFIED: This status should never get used.\n - ACCESS_STATE_PENDING: The access is pending and can either be accepted or deleted.\n - ACCESS_STATE_ACCEPTED: The access is accepted and can be deleted.",
      "title": "the visibility levels"
    },
    "typesPermissionLevel": {
      "type": "string",
      "enum": [
        "PERMISSION_LEVEL_UNSPECIFIED",
        "PERMISSION_LEVEL_PUBLIC",
        "PERMISSION_LEVEL_READ",
        "PERMISSION_LEVEL_WRITE",
        "PERMISSION_LEVEL_ADMIN"
      ],
      "default": "PERMISSION_LEVEL_UNSPECIFIED",
      "description": "- PERMISSION_LEVEL_UNSPECIFIED: the permission is not specified\n - PERMISSION_LEVEL_PUBLIC: the permission is public\n - PERMISSION_LEVEL_READ: the permission is read\n - PERMISSION_LEVEL_WRITE: the permission is write\n - PERMISSION_LEVEL_ADMIN: the permission is admin",
      "title": "the permission levels"
    },
    "typesVisibilityLevel": {
      "type": "string",
      "enum": [
        "VISIBILITY_LEVEL_UNSPECIFIED",
        "VISIBILITY_LEVEL_PUBLIC",
        "VISIBILITY_LEVEL_RESTRICTED",
        "VISIBILITY_LEVEL_PRIVATE",
        "VISIBILITY_LEVEL_HIDDEN"
      ],
      "default": "VISIBILITY_LEVEL_UNSPECIFIED",
      "description": "- VISIBILITY_LEVEL_UNSPECIFIED: the visibility is not specified\n - VISIBILITY_LEVEL_PUBLIC: the visibility is public\n - VISIBILITY_LEVEL_RESTRICTED: the visibility is restricted\n - VISIBILITY_LEVEL_PRIVATE: the visibility is private\n - VISIBILITY_LEVEL_HIDDEN: the visibility is hidden",
      "title": "the visibility levels"
    },
    "v1alpha1FavoriteCircleResponse": {
      "type": "object",
      "title": "the response to favorite a circle"
    },
    "v1alpha1ListCirclesResponse": {
      "type": "object",
      "properties": {
        "circles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/circlev1alpha1Circle"
          },
          "title": "the circles"
        },
        "nextPageToken": {
          "type": "string",
          "title": "the next page token"
        }
      },
      "title": "the response to list circles"
    },
    "v1alpha1UnfavoriteCircleResponse": {
      "type": "object",
      "title": "the response to unfavorite a circle"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "Bearer token for authentication",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
